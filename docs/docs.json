{"meta":{"generator":"0.9.0","format":20,"date":1610871592325},"custom":{"examples":{"name":"Examples","files":{"ping":{"name":"Ping","type":"js","content":"const g = require (\"child_process\");\n","path":"docs/examples/ping.js"}}}},"classes":[{"name":"BaseClient","description":"The base class for all clients.","extends":[[["EventEmitter"]]],"props":[{"name":"_timeouts","description":"Timeouts set by {@link BaseClient#setTimeout} that are still active","access":"private","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":22,"file":"BaseClient.js","path":"src/client"}},{"name":"_intervals","description":"Intervals set by {@link BaseClient#setInterval} that are still active","access":"private","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":29,"file":"BaseClient.js","path":"src/client"}},{"name":"_immediates","description":"Intervals set by {@link BaseClient#setImmediate} that are still active","access":"private","type":[[["Set","<"],["Immediate",">"]]],"meta":{"line":36,"file":"BaseClient.js","path":"src/client"}},{"name":"options","description":"The options the client was instantiated with","type":[[["ClientOptions"]]],"meta":{"line":42,"file":"BaseClient.js","path":"src/client"}},{"name":"rest","description":"The Rest manager of the client","access":"private","type":[[["RestManager"]]],"meta":{"line":49,"file":"BaseClient.js","path":"src/client"}},{"name":"api","description":"Rest shortcut","access":"private","readonly":true,"type":[[["Object"]]],"meta":{"line":58,"file":"BaseClient.js","path":"src/client"}}],"methods":[{"name":"debug","description":"Emitts debug event","params":[{"name":"content","description":"Content to emit","type":[[["string"]]]}],"async":true,"meta":{"line":71,"file":"BaseClient.js","path":"src/client"}},{"name":"destroy","description":"Destroys all assets used by the base client.","meta":{"line":80,"file":"BaseClient.js","path":"src/client"}},{"name":"setTimeout","description":"Sets a timeout that will be automatically cancelled if the client is destroyed.","params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait before executing (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":96,"file":"BaseClient.js","path":"src/client"}},{"name":"clearTimeout","description":"Clears a timeout.","params":[{"name":"timeout","description":"Timeout to cancel","type":[[["Timeout"]]]}],"meta":{"line":109,"file":"BaseClient.js","path":"src/client"}},{"name":"setInterval","description":"Sets an interval that will be automatically cancelled if the client is destroyed.","params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait between executions (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":121,"file":"BaseClient.js","path":"src/client"}},{"name":"clearInterval","description":"Clears an interval.","params":[{"name":"interval","description":"Interval to cancel","type":[[["Timeout"]]]}],"meta":{"line":131,"file":"BaseClient.js","path":"src/client"}},{"name":"setImmediate","description":"Sets an immediate that will be automatically cancelled if the client is destroyed.","params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Immediate"]]],"meta":{"line":142,"file":"BaseClient.js","path":"src/client"}},{"name":"clearImmediate","description":"Clears an immediate.","params":[{"name":"immediate","description":"Immediate to cancel","type":[[["Immediate"]]]}],"meta":{"line":152,"file":"BaseClient.js","path":"src/client"}},{"name":"incrementMaxListeners","description":"Increments max listeners by one, if they are not zero.","access":"private","meta":{"line":161,"file":"BaseClient.js","path":"src/client"}},{"name":"decrementMaxListeners","description":"Decrements max listeners by one, if they are not zero.","access":"private","meta":{"line":172,"file":"BaseClient.js","path":"src/client"}}],"meta":{"line":13,"file":"BaseClient.js","path":"src/client"}},{"name":"Client","description":"The main hub for interacting with telegram API","extends":[[["BaseClient"]]],"construct":{"name":"Client","params":[{"name":"options","description":"Options for the client","optional":true,"type":[[["ClientOptions"]]]}]},"props":[{"name":"options","description":"Options of the client","type":[[["Object"]]],"meta":{"line":19,"file":"Client.js","path":"src/client"}},{"name":"polling","description":"The polling client used to get updates from telegram API","type":[[["PollingClient"]]],"meta":{"line":25,"file":"Client.js","path":"src/client"}},{"name":"token","description":"The token of the bot to authorize with API\n<warn>This should be kept private always</warn>","nullable":true,"type":[[["string"]]],"meta":{"line":45,"file":"Client.js","path":"src/client"}},{"name":"user","description":"The client user","nullable":true,"type":[[["ClientUser"]]],"meta":{"line":52,"file":"Client.js","path":"src/client"}},{"name":"readAt","description":"The time at which the client was ready","nullable":true,"type":[[["Date"]]],"meta":{"line":59,"file":"Client.js","path":"src/client"}},{"name":"uptime","description":"The uptime of the bot/client","nullable":true,"type":[[["Date"]]],"meta":{"line":67,"file":"Client.js","path":"src/client"}},{"name":"_timeouts","description":"Timeouts set by {@link BaseClient#setTimeout} that are still active","access":"private","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":22,"file":"BaseClient.js","path":"src/client"}},{"name":"_intervals","description":"Intervals set by {@link BaseClient#setInterval} that are still active","access":"private","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":29,"file":"BaseClient.js","path":"src/client"}},{"name":"_immediates","description":"Intervals set by {@link BaseClient#setImmediate} that are still active","access":"private","type":[[["Set","<"],["Immediate",">"]]],"meta":{"line":36,"file":"BaseClient.js","path":"src/client"}},{"name":"rest","description":"The Rest manager of the client","access":"private","type":[[["RestManager"]]],"meta":{"line":49,"file":"BaseClient.js","path":"src/client"}},{"name":"api","description":"Rest shortcut","access":"private","readonly":true,"type":[[["Object"]]],"meta":{"line":58,"file":"BaseClient.js","path":"src/client"}}],"methods":[{"name":"login","description":"Logs the client in and starts receiving events.","params":[{"name":"token","description":"Token of the bot to log in with\nreturns {Promise<string>} Token of the bot used","optional":true,"default":"this.token","type":[[["string"]]]}],"async":true,"meta":{"line":76,"file":"Client.js","path":"src/client"}},{"name":"trackUpdates","description":"Track telegram updates either through polling or webhooks","async":true,"meta":{"line":96,"file":"Client.js","path":"src/client"}},{"name":"debug","description":"Emitts debug event","inherits":"BaseClient#debug","inherited":true,"params":[{"name":"content","description":"Content to emit","type":[[["string"]]]}],"async":true,"meta":{"line":71,"file":"BaseClient.js","path":"src/client"}},{"name":"destroy","description":"Destroys all assets used by the base client.","inherits":"BaseClient#destroy","inherited":true,"meta":{"line":80,"file":"BaseClient.js","path":"src/client"}},{"name":"setTimeout","description":"Sets a timeout that will be automatically cancelled if the client is destroyed.","inherits":"BaseClient#setTimeout","inherited":true,"params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait before executing (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":96,"file":"BaseClient.js","path":"src/client"}},{"name":"clearTimeout","description":"Clears a timeout.","inherits":"BaseClient#clearTimeout","inherited":true,"params":[{"name":"timeout","description":"Timeout to cancel","type":[[["Timeout"]]]}],"meta":{"line":109,"file":"BaseClient.js","path":"src/client"}},{"name":"setInterval","description":"Sets an interval that will be automatically cancelled if the client is destroyed.","inherits":"BaseClient#setInterval","inherited":true,"params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait between executions (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":121,"file":"BaseClient.js","path":"src/client"}},{"name":"clearInterval","description":"Clears an interval.","inherits":"BaseClient#clearInterval","inherited":true,"params":[{"name":"interval","description":"Interval to cancel","type":[[["Timeout"]]]}],"meta":{"line":131,"file":"BaseClient.js","path":"src/client"}},{"name":"setImmediate","description":"Sets an immediate that will be automatically cancelled if the client is destroyed.","inherits":"BaseClient#setImmediate","inherited":true,"params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Immediate"]]],"meta":{"line":142,"file":"BaseClient.js","path":"src/client"}},{"name":"clearImmediate","description":"Clears an immediate.","inherits":"BaseClient#clearImmediate","inherited":true,"params":[{"name":"immediate","description":"Immediate to cancel","type":[[["Immediate"]]]}],"meta":{"line":152,"file":"BaseClient.js","path":"src/client"}},{"name":"incrementMaxListeners","description":"Increments max listeners by one, if they are not zero.","access":"private","inherits":"BaseClient#incrementMaxListeners","inherited":true,"meta":{"line":161,"file":"BaseClient.js","path":"src/client"}},{"name":"decrementMaxListeners","description":"Decrements max listeners by one, if they are not zero.","access":"private","inherits":"BaseClient#decrementMaxListeners","inherited":true,"meta":{"line":172,"file":"BaseClient.js","path":"src/client"}}],"meta":{"line":9,"file":"Client.js","path":"src/client"}},{"name":"PollingClient","description":"The polling client that is used to poll updates from telegram regularly.","meta":{"line":5,"file":"PollingClient.js","path":"src/client"}},{"name":"TelegramAPIError","description":"Represents an error from the Telegram API.","extends":[[["Error"]]],"props":[{"name":"method","description":"The HTTP method used for the request","type":[[["string"]]],"meta":{"line":18,"file":"TelegramAPIError.js","path":"src/errors"}},{"name":"path","description":"The path of the request relative to the HTTP endpoint","type":[[["string"]]],"meta":{"line":24,"file":"TelegramAPIError.js","path":"src/errors"}},{"name":"code","description":"HTTP error code returned by Discord","type":[[["number"]]],"meta":{"line":30,"file":"TelegramAPIError.js","path":"src/errors"}},{"name":"status","description":"The HTTP status code","type":[[["number"]]],"meta":{"line":36,"file":"TelegramAPIError.js","path":"src/errors"}}],"methods":[{"name":"flattenErrors","description":"Flattens an errors object returned from the API into an array.","scope":"static","access":"private","params":[{"name":"obj","description":"Discord errors object","type":[[["Object"]]]},{"name":"key","description":"Used internally to determine key names of nested fields","optional":true,"type":[[["string"]]]}],"returns":[[["Array","<"],["string",">"]]],"meta":{"line":46,"file":"TelegramAPIError.js","path":"src/errors"}}],"meta":{"line":7,"file":"TelegramAPIError.js","path":"src/errors"}},{"name":"HTTPError","description":"Represents a HTTP error from a request.","extends":[[["Error"]]],"props":[{"name":"name","description":"The name of the error","type":[[["string"]]],"meta":{"line":15,"file":"HTTPError.js","path":"src/rest"}},{"name":"code","description":"HTTP error code returned from the request","type":[[["number"]]],"meta":{"line":21,"file":"HTTPError.js","path":"src/rest"}},{"name":"method","description":"The HTTP method used for the request","type":[[["string"]]],"meta":{"line":27,"file":"HTTPError.js","path":"src/rest"}},{"name":"path","description":"The path of the request relative to the HTTP endpoint","type":[[["string"]]],"meta":{"line":33,"file":"HTTPError.js","path":"src/rest"}}],"meta":{"line":7,"file":"HTTPError.js","path":"src/rest"}},{"name":"Base","description":"Represents the base structure","construct":{"name":"Base","params":[{"name":"client","description":"The instantiated client","type":[[["Client"]]]}]},"meta":{"line":3,"file":"Base.js","path":"src/structures"}},{"name":"Chat","description":"Represents chat \nextends {Base}","construct":{"name":"Chat","params":[{"name":"client","description":"The instantiating client","type":[[["Client"]]]},{"name":"message","description":"The message that is belongings to this chat","type":[[["Message"]]]}]},"meta":{"line":8,"file":"Chat.js","path":"src/structures"}},{"name":"Message","description":"Represents message\nextends {Base}","meta":{"line":12,"file":"Message.js","path":"src/structures"}},{"name":"User","description":"Represents a user on Telegram.","extends":[[["Base"]]],"construct":{"name":"User","params":[{"name":"client","description":"The instantiating client","type":[[["Client"]]]},{"name":"data","description":"The data for the user","type":[[["object"]]]}]},"props":[{"name":"id","description":"The id of the user","type":[[["integer"]]],"meta":{"line":19,"file":"User.js","path":"src/structures"}},{"name":"firstName","description":"First name of the user","type":[[["string"]]],"meta":{"line":28,"file":"User.js","path":"src/structures"}},{"name":"bot","description":"Whether the user is bot or not","type":[[["boolean"]]],"meta":{"line":34,"file":"User.js","path":"src/structures"}},{"name":"lastName","description":"Last name of the user","nullable":true,"type":[[["string"]]],"meta":{"line":41,"file":"User.js","path":"src/structures"}},{"name":"username","description":"Username of the user","nullable":true,"type":[[["string"]]],"meta":{"line":49,"file":"User.js","path":"src/structures"}},{"name":"language","description":"The language of the user","nullable":true,"type":[[["string"]]],"meta":{"line":57,"file":"User.js","path":"src/structures"}}],"meta":{"line":6,"file":"User.js","path":"src/structures"}},{"name":"Util","description":"Contains various usefull utility functions","methods":[{"name":"mergeDefault","description":"Sets default properties on an object that aren't already specified.","scope":"static","access":"private","params":[{"name":"def","description":"Default properties","type":[[["Object"]]]},{"name":"given","description":"Object to assign defaults to","type":[[["Object"]]]}],"returns":[[["Object"]]],"meta":{"line":19,"file":"Util.js","path":"src/util"}}],"meta":{"line":7,"file":"Util.js","path":"src/util"}}],"interfaces":[],"typedefs":[],"externals":[]}