{"meta":{"generator":"0.9.0","format":20,"date":1612095497199},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# Welcome\n\nWelcome to the telegram.js documentation.\n\n## About\n\ntelegram.js is a powerful [Node.js](https://nodejs.org) module that allows you to easily interact with the\n[Telegram Bot API](https://core.telegram.org/bots/api).\n\n- Object-oriented\n- Predictable abstractions\n- Performant\n- 100% coverage of Telegeam Bot API\n\n## Installation\n\nwith npm: `npm install @yuva1422/telegram.js`\n\n## Example Usage\n\n```js\nconst Telegram = require('@yuva1422/telegram.js');\nconst client = new Telegram.client();\n\nclient.on('message', (msg) => {\n  if(msg.content == 'Hii') {\n    msg.reply('Hello!');\n  }\n});\n\n// /ping\nclient.commands.on('ping', (bot, message, args) => {\n  message.chat.send('Pong!');\n});\n\nclient.login('token');\n\nclient.startPolling();\n```\n\n## Contributing\n\nBefore creating an issue, please ensure that it hasn't already been reported/suggested, and double-check the\n[documentation](https://telegram.js.org/#/docs).  \nSee [the contribution guide](https://github.com/yuvapoojary/telegram.js/blob/master/.github/CONTRIBUTING.md) if you'd like to submit a PR.\n\n","path":"docs/general/welcome.md"}}},"examples":{"name":"Examples","files":{"ping":{"name":"Ping","type":"js","content":"const Telegram = require('@yuva1422/telegram.js');\nconst client = new Telegram.Client();\n\nclient.on('ready', () => {\n  console.log(`Logged in as ${client.user.username}`);\n});\n\nclient.on('message', (msg) => {\n  if (msg.content === 'hii') {\n    msg.reply('hello');\n  };\n});\n\nclient.commands.on('ping', (bot, msg, args) => {\n  msg.chat.send('pong!');\n});\n\nclient.login('token');\n\n\nclient.startPolling();\n","path":"docs/examples/ping.js"}}}},"classes":[{"name":"BaseClient","description":"The base class for all clients.","extends":[[["EventEmitter"]]],"props":[{"name":"_timeouts","description":"Timeouts set by {@link BaseClient#setTimeout} that are still active","access":"private","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":23,"file":"BaseClient.js","path":"src/client"}},{"name":"_intervals","description":"Intervals set by {@link BaseClient#setInterval} that are still active","access":"private","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":30,"file":"BaseClient.js","path":"src/client"}},{"name":"_immediates","description":"Intervals set by {@link BaseClient#setImmediate} that are still active","access":"private","type":[[["Set","<"],["Immediate",">"]]],"meta":{"line":37,"file":"BaseClient.js","path":"src/client"}},{"name":"options","description":"The options the client was instantiated with","type":[[["ClientOptions"]]],"meta":{"line":43,"file":"BaseClient.js","path":"src/client"}},{"name":"rest","description":"The Rest manager of the client","access":"private","type":[[["RestManager"]]],"meta":{"line":50,"file":"BaseClient.js","path":"src/client"}},{"name":"api","description":"Rest shortcut","access":"private","readonly":true,"type":[[["Object"]]],"meta":{"line":59,"file":"BaseClient.js","path":"src/client"}}],"methods":[{"name":"destroy","description":"Destroys all assets used by the base client.","meta":{"line":71,"file":"BaseClient.js","path":"src/client"}},{"name":"setTimeout","description":"Sets a timeout that will be automatically cancelled if the client is destroyed.","params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait before executing (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":87,"file":"BaseClient.js","path":"src/client"}},{"name":"clearTimeout","description":"Clears a timeout.","params":[{"name":"timeout","description":"Timeout to cancel","type":[[["Timeout"]]]}],"meta":{"line":100,"file":"BaseClient.js","path":"src/client"}},{"name":"setInterval","description":"Sets an interval that will be automatically cancelled if the client is destroyed.","params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait between executions (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":112,"file":"BaseClient.js","path":"src/client"}},{"name":"clearInterval","description":"Clears an interval.","params":[{"name":"interval","description":"Interval to cancel","type":[[["Timeout"]]]}],"meta":{"line":122,"file":"BaseClient.js","path":"src/client"}},{"name":"setImmediate","description":"Sets an immediate that will be automatically cancelled if the client is destroyed.","params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Immediate"]]],"meta":{"line":133,"file":"BaseClient.js","path":"src/client"}},{"name":"clearImmediate","description":"Clears an immediate.","params":[{"name":"immediate","description":"Immediate to cancel","type":[[["Immediate"]]]}],"meta":{"line":143,"file":"BaseClient.js","path":"src/client"}},{"name":"incrementMaxListeners","description":"Increments max listeners by one, if they are not zero.","access":"private","meta":{"line":152,"file":"BaseClient.js","path":"src/client"}},{"name":"decrementMaxListeners","description":"Decrements max listeners by one, if they are not zero.","access":"private","meta":{"line":163,"file":"BaseClient.js","path":"src/client"}}],"meta":{"line":14,"file":"BaseClient.js","path":"src/client"}},{"name":"Client","description":"The main hub for interacting with telegram Bot API","extends":[[["BaseClient"]]],"construct":{"name":"Client","params":[{"name":"options","description":"Options for the client","optional":true,"type":[[["ClientOptions"]]]}]},"props":[{"name":"options","description":"Options of the client","type":[[["Object"]]],"meta":{"line":27,"file":"Client.js","path":"src/client"}},{"name":"commands","description":"The command manager of the client","type":[[["CommandManager"]]],"meta":{"line":33,"file":"Client.js","path":"src/client"}},{"name":"worker","description":"The worker of the client","type":[[["WorkerClient"]]],"meta":{"line":39,"file":"Client.js","path":"src/client"}},{"name":"polling","description":"The polling client used to get updates from telegram API","type":[[["PollingClient"]]],"meta":{"line":45,"file":"Client.js","path":"src/client"}},{"name":"webhook","description":"The webhook client used to get updates from telegram API","type":[[["WebhookClient"]]],"meta":{"line":51,"file":"Client.js","path":"src/client"}},{"name":"users","description":"The user manager of the client","type":[[["UserManager"]]],"meta":{"line":57,"file":"Client.js","path":"src/client"}},{"name":"chats","description":"The chat manager of the client","type":[[["ChatManager"]]],"meta":{"line":62,"file":"Client.js","path":"src/client"}},{"name":"token","description":"The token of the bot to authorize with API\n<warn>This should be kept private always</warn>","nullable":true,"type":[[["string"]]],"meta":{"line":69,"file":"Client.js","path":"src/client"}},{"name":"user","description":"The client user","nullable":true,"type":[[["ClientUser"]]],"meta":{"line":75,"file":"Client.js","path":"src/client"}},{"name":"readAt","description":"The time at which the client was ready","nullable":true,"type":[[["Date"]]],"meta":{"line":81,"file":"Client.js","path":"src/client"}},{"name":"uptime","description":"The uptime of the bot/client","nullable":true,"type":[[["Date"]]],"meta":{"line":88,"file":"Client.js","path":"src/client"}},{"name":"_timeouts","description":"Timeouts set by {@link BaseClient#setTimeout} that are still active","access":"private","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":23,"file":"BaseClient.js","path":"src/client"}},{"name":"_intervals","description":"Intervals set by {@link BaseClient#setInterval} that are still active","access":"private","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":30,"file":"BaseClient.js","path":"src/client"}},{"name":"_immediates","description":"Intervals set by {@link BaseClient#setImmediate} that are still active","access":"private","type":[[["Set","<"],["Immediate",">"]]],"meta":{"line":37,"file":"BaseClient.js","path":"src/client"}},{"name":"rest","description":"The Rest manager of the client","access":"private","type":[[["RestManager"]]],"meta":{"line":50,"file":"BaseClient.js","path":"src/client"}},{"name":"api","description":"Rest shortcut","access":"private","readonly":true,"type":[[["Object"]]],"meta":{"line":59,"file":"BaseClient.js","path":"src/client"}}],"methods":[{"name":"login","description":"Logs the client in and starts receiving events.","params":[{"name":"token","description":"Token of the bot to log in with","optional":true,"default":"this.token","type":[[["string"]]]}],"async":true,"returns":{"types":[[["Promise","<"],["string",">"]]],"description":"Token of the bot used"},"meta":{"line":97,"file":"Client.js","path":"src/client"}},{"name":"startPolling","description":"Start polling for the updates","meta":{"line":110,"file":"Client.js","path":"src/client"}},{"name":"setWebhook","description":"Set webhook endpoint","params":[{"name":"url","description":"Public url","type":[[["string"]]]},{"name":"certificate","description":"Required if you are using self signed certificate","optional":true,"type":[[["BufferResolvable"]],[["Stream"]]]},{"name":"options","description":"Options","optional":true,"type":[[["Object"]]]},{"name":"options.ip_adress","description":"Ip address of the server","optional":true,"type":[[["string"]]]},{"name":"options.max_connections","description":"Max allowed simultaneous connections","optional":true,"type":[[["number"]]]},{"name":"options.allowed_updates","description":"Allowex updates to receive","optional":true,"type":[[["Array","<"],["Array",">"]]]},{"name":"options.drop_pending_updates","description":"Wether to drop pending updates","optional":true,"type":[[["boolean"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":125,"file":"Client.js","path":"src/client"}},{"name":"deleteWebhook","description":"Delete webhook","params":[{"name":"dropUpdates","description":"Drop pending updates","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":147,"file":"Client.js","path":"src/client"}},{"name":"setupWebhook","description":"Set up webhook to receive updates","params":[{"name":"path","description":"Path for the webhook","type":[[["string"]]]},{"name":"port","description":"Port for the webhook","optional":true,"default":8443,"type":[[["number"]]]},{"name":"host","description":"Host for the webhook to listen on","optional":true,"default":"0.0.0.0","type":[[["string"]]]},{"name":"tlsOptions","description":"Tls/https options for the server","optional":true,"type":[[["Object"]]]},{"name":"key","description":"Key file path","type":[[["string"]]]},{"name":"cert","description":"Certificate file path","type":[[["string"]]]}],"meta":{"line":164,"file":"Client.js","path":"src/client"}},{"name":"webhookCallback","description":"Attach existing http server for webhooks","params":[{"name":"path","description":"Path for the webhook post","type":[[["string"]]]},{"name":"cb","type":[[["httpIncomingMessage"]]]}],"meta":{"line":177,"file":"Client.js","path":"src/client"}},{"name":"getWebhookInfo","description":"Get information about the webhook","returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":186,"file":"Client.js","path":"src/client"}},{"name":"fetchApplication","description":"Fetches the authenticated bot's information","returns":[[["Promise","<"],["ClientUser",">"]]],"meta":{"line":194,"file":"Client.js","path":"src/client"}},{"name":"getUpdates","description":"Get latest updates from telegram API","params":[{"name":"options","description":"Options","optional":true,"type":[[["Object"]]]}],"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":206,"file":"Client.js","path":"src/client"}},{"name":"logout","description":"Log outs from the cloud Bot API","returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":216,"file":"Client.js","path":"src/client"}},{"name":"close","description":"Closes the bot instance","returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":224,"file":"Client.js","path":"src/client"}},{"name":"destroy","description":"Destroys all assets used by the base client.","inherits":"BaseClient#destroy","inherited":true,"meta":{"line":71,"file":"BaseClient.js","path":"src/client"}},{"name":"setTimeout","description":"Sets a timeout that will be automatically cancelled if the client is destroyed.","inherits":"BaseClient#setTimeout","inherited":true,"params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait before executing (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":87,"file":"BaseClient.js","path":"src/client"}},{"name":"clearTimeout","description":"Clears a timeout.","inherits":"BaseClient#clearTimeout","inherited":true,"params":[{"name":"timeout","description":"Timeout to cancel","type":[[["Timeout"]]]}],"meta":{"line":100,"file":"BaseClient.js","path":"src/client"}},{"name":"setInterval","description":"Sets an interval that will be automatically cancelled if the client is destroyed.","inherits":"BaseClient#setInterval","inherited":true,"params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait between executions (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":112,"file":"BaseClient.js","path":"src/client"}},{"name":"clearInterval","description":"Clears an interval.","inherits":"BaseClient#clearInterval","inherited":true,"params":[{"name":"interval","description":"Interval to cancel","type":[[["Timeout"]]]}],"meta":{"line":122,"file":"BaseClient.js","path":"src/client"}},{"name":"setImmediate","description":"Sets an immediate that will be automatically cancelled if the client is destroyed.","inherits":"BaseClient#setImmediate","inherited":true,"params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Immediate"]]],"meta":{"line":133,"file":"BaseClient.js","path":"src/client"}},{"name":"clearImmediate","description":"Clears an immediate.","inherits":"BaseClient#clearImmediate","inherited":true,"params":[{"name":"immediate","description":"Immediate to cancel","type":[[["Immediate"]]]}],"meta":{"line":143,"file":"BaseClient.js","path":"src/client"}},{"name":"incrementMaxListeners","description":"Increments max listeners by one, if they are not zero.","access":"private","inherits":"BaseClient#incrementMaxListeners","inherited":true,"meta":{"line":152,"file":"BaseClient.js","path":"src/client"}},{"name":"decrementMaxListeners","description":"Decrements max listeners by one, if they are not zero.","access":"private","inherits":"BaseClient#decrementMaxListeners","inherited":true,"meta":{"line":163,"file":"BaseClient.js","path":"src/client"}}],"events":[{"name":"message","description":"Emitted whenever a message created","params":[{"name":"message","description":"The created message","type":[[["Message"]]]}],"meta":{"line":40,"file":"WorkerClient.js","path":"src/client"}},{"name":"messageUpdate","description":"Emitted whenever a message is updated/edited","params":[{"name":"oldMessage","description":"The message before the update","optional":true,"type":[[["Message"]]]},{"name":"newMessage","description":"The message after the edit/update","optional":true,"type":[[["Message"]]]}],"meta":{"line":56,"file":"WorkerClient.js","path":"src/client"}},{"name":"callbackQuery","description":"Emitted whenever a callback query is triggered","params":[{"name":"callbackQuery","description":"The incoming callback query","type":[[["CallbackQuery"]]]}],"meta":{"line":67,"file":"WorkerClient.js","path":"src/client"}},{"name":"inlineQuery","description":"Emitted whenever a inline query is triggered","params":[{"name":"inlineQuery","description":"The incoming inline query","type":[[["InlineQuery"]]]}],"meta":{"line":77,"file":"WorkerClient.js","path":"src/client"}},{"name":"inlineChosenResult","description":"Emitted whenever a inline query result is chosen","params":[{"name":"inlineResult","description":"The result that was chosen","type":[[["InlineChosenResult"]]]}],"meta":{"line":87,"file":"WorkerClient.js","path":"src/client"}},{"name":"chatCreate","description":"Emitted whenever bot joins a new chat","params":[{"name":"chat","description":"The joined chat","type":[[["Chat"]]]},{"name":"author","description":"The user who added the bot","optional":true,"nullable":true,"type":[[["User"]]]}],"meta":{"line":101,"file":"WorkerClient.js","path":"src/client"}},{"name":"chatMemberAdd","description":"Emitted whenever a member is added to the chat","params":[{"name":"chat","description":"The chat where the member was added","type":[[["Chat"]]]},{"name":"member","description":"The member who joined the chat","type":[[["ChatMember"]]]},{"name":"author","description":"The admin user who added the member","optional":true,"nullable":true,"type":[[["User"]]]}],"meta":{"line":108,"file":"WorkerClient.js","path":"src/client"}},{"name":"chatDelete","description":"Emitted whenever bot leaves a chat","params":[{"name":"chat","description":"The chat from which bot was removed","type":[[["Chat"]]]},{"name":"author","description":"The user who removed/kicked the bot","optional":true,"nullable":true,"type":[[["User"]]]}],"meta":{"line":124,"file":"WorkerClient.js","path":"src/client"}},{"name":"chatMemberRemove","description":"Emitted whenever a member is removed from the chat","params":[{"name":"chat","description":"The member that has left/been kicked from the chat","type":[[["Chat"]]]},{"name":"member","description":"The member who was kicked/leaved","type":[[["ChatMember"]]]},{"name":"author","description":"The user who kicked the member","optional":true,"nullable":true,"type":[[["User"]]]}],"meta":{"line":131,"file":"WorkerClient.js","path":"src/client"}}],"meta":{"line":17,"file":"Client.js","path":"src/client"}},{"name":"PollingClient","description":"The polling client that is used to poll updates from telegram at specific intervals.","methods":[{"name":"start","description":"Starts API polling","returns":[[["boolean"]]],"meta":{"line":20,"file":"PollingClient.js","path":"src/client"}},{"name":"stop","description":"Stops polling if running","meta":{"line":31,"file":"PollingClient.js","path":"src/client"}}],"meta":{"line":6,"file":"PollingClient.js","path":"src/client"}},{"name":"WebhookClient","description":"Represents the webhook client","methods":[{"name":"createServer","description":"Create http server","params":[{"name":"path","description":"Path for the webhook","type":[[["string"]]]},{"name":"port","description":"Port to listen on","type":[[["number"]]]},{"name":"host","description":"The host to run on","type":[[["string"]]]},{"name":"tlsOptions","description":"Https options","type":[[["Object"]]]}],"meta":{"line":27,"file":"WebhookClient.js","path":"src/client"}},{"name":"close","description":"Closes the http server","meta":{"line":62,"file":"WebhookClient.js","path":"src/client"}}],"meta":{"line":9,"file":"WebhookClient.js","path":"src/client"}},{"name":"WorkerClient","description":"Represents the worker structure","methods":[{"name":"processUpdate","description":"Process the data from telegram API","see":["{@link https://core.telegram.org/bots/api#update|Telegram Bot API}"],"params":[{"name":"data","type":[[["Object"]]]}],"returns":[[["WorkerClient"]]],"meta":{"line":22,"file":"WorkerClient.js","path":"src/client"}}],"meta":{"line":11,"file":"WorkerClient.js","path":"src/client"}},{"name":"TelegramAPIError","description":"Represents an error from the Telegram API.","extends":[[["Error"]]],"props":[{"name":"method","description":"The HTTP method used for the request","type":[[["string"]]],"meta":{"line":18,"file":"TelegramAPIError.js","path":"src/errors"}},{"name":"path","description":"The path of the request relative to the HTTP endpoint","type":[[["string"]]],"meta":{"line":24,"file":"TelegramAPIError.js","path":"src/errors"}},{"name":"code","description":"HTTP error code returned by Discord","type":[[["number"]]],"meta":{"line":30,"file":"TelegramAPIError.js","path":"src/errors"}},{"name":"status","description":"The HTTP status code","type":[[["number"]]],"meta":{"line":36,"file":"TelegramAPIError.js","path":"src/errors"}}],"methods":[{"name":"flattenErrors","description":"Flattens an errors object returned from the API into an array.","scope":"static","access":"private","params":[{"name":"obj","description":"Discord errors object","type":[[["Object"]]]},{"name":"key","description":"Used internally to determine key names of nested fields","optional":true,"type":[[["string"]]]}],"returns":[[["Array","<"],["string",">"]]],"meta":{"line":46,"file":"TelegramAPIError.js","path":"src/errors"}}],"meta":{"line":7,"file":"TelegramAPIError.js","path":"src/errors"}},{"name":"BaseManager","description":"Base Manager which holds the caches/collections","props":[{"name":"client","description":"The instantiated client","readonly":true,"type":[[["Client"]]],"meta":{"line":9,"file":"BaseManager.js","path":"src/managers"}},{"name":"holds","description":"The data structure belonging to this manager","access":"private","readonly":true,"type":[[["function"]]],"meta":{"line":17,"file":"BaseManager.js","path":"src/managers"}}],"methods":[{"name":"resolve","description":"Resolves a data entry to a data Object.","params":[{"name":"idOrInstance","description":"The id or instance of something in this Manager","type":[[["string"]],[["Object"]]]}],"returns":{"types":[[["Object"]]],"description":"An instance from this Manager","nullable":true},"meta":{"line":53,"file":"BaseManager.js","path":"src/managers"}},{"name":"resolveID","description":"Resolves a data entry to a instance ID.","params":[{"name":"idOrInstance","description":"The id or instance of something in this Manager","type":[[["string"]],[["Object"]]]}],"returns":[[["number"]],[["string"]]],"meta":{"line":64,"file":"BaseManager.js","path":"src/managers"}}],"meta":{"line":7,"file":"BaseManager.js","path":"src/managers"}},{"name":"ChatManager","description":"Manages API methods of Chat and stores theirs cache","extends":[[["BaseManager"]]],"props":[{"name":"cache","description":"The cache of this manager","type":[[["Collection","<"],["Chat",">"]]],"meta":{"line":17,"file":"ChatManager.js","path":"src/managers"}},{"name":"client","description":"The instantiated client","readonly":true,"type":[[["Client"]]],"meta":{"line":9,"file":"BaseManager.js","path":"src/managers"}},{"name":"holds","description":"The data structure belonging to this manager","access":"private","readonly":true,"type":[[["function"]]],"meta":{"line":17,"file":"BaseManager.js","path":"src/managers"}}],"methods":[{"name":"resolve","description":"Resolves a ChatResolvable to a Chat object","params":[{"name":"chat","description":"The ChatResolvable to identify","type":[[["ChatResolvable"]]]}],"returns":{"types":[[["Chat"]]],"nullable":true},"meta":{"line":37,"file":"ChatManager.js","path":"src/managers"}},{"name":"fetch","description":"Obtains a Chat from Telegram API","params":[{"name":"id","description":"The id of the chat","type":[[["Integer"]],[["string"]]]}],"returns":[[["Promise","<"],["Chat",">"]]],"meta":{"line":48,"file":"ChatManager.js","path":"src/managers"}},{"name":"resolveID","description":"Resolves a data entry to a instance ID.","inherits":"BaseManager#resolveID","inherited":true,"params":[{"name":"idOrInstance","description":"The id or instance of something in this Manager","type":[[["string"]],[["Object"]]]}],"returns":[[["number"]],[["string"]]],"meta":{"line":64,"file":"BaseManager.js","path":"src/managers"}}],"meta":{"line":12,"file":"ChatManager.js","path":"src/managers"}},{"name":"ChatMemberManager","description":"Manages API methods of ChatMember and stores their cache","extends":[[["BaseManager"]]],"props":[{"name":"client","description":"The instantiated client","readonly":true,"type":[[["Client"]]],"meta":{"line":9,"file":"BaseManager.js","path":"src/managers"}},{"name":"holds","description":"The data structure belonging to this manager","access":"private","readonly":true,"type":[[["function"]]],"meta":{"line":17,"file":"BaseManager.js","path":"src/managers"}}],"methods":[{"name":"resolve","description":"Resolves a data entry to a data Object.","inherits":"BaseManager#resolve","inherited":true,"params":[{"name":"idOrInstance","description":"The id or instance of something in this Manager","type":[[["string"]],[["Object"]]]}],"returns":{"types":[[["Object"]]],"description":"An instance from this Manager","nullable":true},"meta":{"line":53,"file":"BaseManager.js","path":"src/managers"}},{"name":"resolveID","description":"Resolves a data entry to a instance ID.","inherits":"BaseManager#resolveID","inherited":true,"params":[{"name":"idOrInstance","description":"The id or instance of something in this Manager","type":[[["string"]],[["Object"]]]}],"returns":[[["number"]],[["string"]]],"meta":{"line":64,"file":"BaseManager.js","path":"src/managers"}}],"meta":{"line":10,"file":"ChatMemberManager.js","path":"src/managers"}},{"name":"MessageManager","description":"Manages API methods of Message and stores their cache","extends":[[["BaseManager"]]],"props":[{"name":"client","description":"The instantiated client","readonly":true,"type":[[["Client"]]],"meta":{"line":9,"file":"BaseManager.js","path":"src/managers"}},{"name":"holds","description":"The data structure belonging to this manager","access":"private","readonly":true,"type":[[["function"]]],"meta":{"line":17,"file":"BaseManager.js","path":"src/managers"}}],"methods":[{"name":"resolve","description":"Resolves a data entry to a data Object.","inherits":"BaseManager#resolve","inherited":true,"params":[{"name":"idOrInstance","description":"The id or instance of something in this Manager","type":[[["string"]],[["Object"]]]}],"returns":{"types":[[["Object"]]],"description":"An instance from this Manager","nullable":true},"meta":{"line":53,"file":"BaseManager.js","path":"src/managers"}},{"name":"resolveID","description":"Resolves a data entry to a instance ID.","inherits":"BaseManager#resolveID","inherited":true,"params":[{"name":"idOrInstance","description":"The id or instance of something in this Manager","type":[[["string"]],[["Object"]]]}],"returns":[[["number"]],[["string"]]],"meta":{"line":64,"file":"BaseManager.js","path":"src/managers"}}],"meta":{"line":10,"file":"MessageManager.js","path":"src/managers"}},{"name":"UserManager","description":"Manages API methods of User and stores their cache","extends":[[["BaseManager"]]],"props":[{"name":"client","description":"The instantiated client","readonly":true,"type":[[["Client"]]],"meta":{"line":9,"file":"BaseManager.js","path":"src/managers"}},{"name":"holds","description":"The data structure belonging to this manager","access":"private","readonly":true,"type":[[["function"]]],"meta":{"line":17,"file":"BaseManager.js","path":"src/managers"}}],"methods":[{"name":"resolve","description":"Resolves a data entry to a data Object.","inherits":"BaseManager#resolve","inherited":true,"params":[{"name":"idOrInstance","description":"The id or instance of something in this Manager","type":[[["string"]],[["Object"]]]}],"returns":{"types":[[["Object"]]],"description":"An instance from this Manager","nullable":true},"meta":{"line":53,"file":"BaseManager.js","path":"src/managers"}},{"name":"resolveID","description":"Resolves a data entry to a instance ID.","inherits":"BaseManager#resolveID","inherited":true,"params":[{"name":"idOrInstance","description":"The id or instance of something in this Manager","type":[[["string"]],[["Object"]]]}],"returns":[[["number"]],[["string"]]],"meta":{"line":64,"file":"BaseManager.js","path":"src/managers"}}],"meta":{"line":10,"file":"UserManager.js","path":"src/managers"}},{"name":"HTTPError","description":"Represents a HTTP error from a request.","extends":[[["Error"]]],"props":[{"name":"name","description":"The name of the error","type":[[["string"]]],"meta":{"line":15,"file":"HTTPError.js","path":"src/rest"}},{"name":"code","description":"HTTP error code returned from the request","type":[[["number"]]],"meta":{"line":21,"file":"HTTPError.js","path":"src/rest"}},{"name":"method","description":"The HTTP method used for the request","type":[[["string"]]],"meta":{"line":27,"file":"HTTPError.js","path":"src/rest"}},{"name":"path","description":"The path of the request relative to the HTTP endpoint","type":[[["string"]]],"meta":{"line":33,"file":"HTTPError.js","path":"src/rest"}}],"meta":{"line":7,"file":"HTTPError.js","path":"src/rest"}},{"name":"Base","description":"Represents the base structure","construct":{"name":"Base","params":[{"name":"client","description":"The instantiated client","type":[[["Client"]]]}]},"meta":{"line":5,"file":"Base.js","path":"src/structures"}},{"name":"CallbackQuery","description":"Represents the CallbackQuery","extends":[[["Base"]]],"props":[{"name":"id","description":"The id of callback query","type":[[["string"]]],"meta":{"line":21,"file":"CallbackQuery.js","path":"src/structures"}},{"name":"author","description":"The user who triggered the callback query","type":[[["User"]]],"meta":{"line":31,"file":"CallbackQuery.js","path":"src/structures"}},{"name":"message","description":"The message with the callback\nbutton that originated the query.\nNote that message content and\nmessage date will not be\navailable if the message is too\nold","nullable":true,"type":[[["Message"]]],"meta":{"line":43,"file":"CallbackQuery.js","path":"src/structures"}},{"name":"inlineMessageId","description":"Identifier of the message sent\nvia the bot in inline mode, that\noriginated the query.","nullable":true,"type":[[["string"]]],"meta":{"line":53,"file":"CallbackQuery.js","path":"src/structures"}},{"name":"chatInstance","description":"Global identifier, uniquely\ncorresponding to the chat to\nwhich the message with thehort\nname of a Game to be returned,\nserves as the unique identifier\nfor the game callback button was\nsent. Useful for high scores in\ngames.","nullable":true,"type":[[["string"]]],"meta":{"line":68,"file":"CallbackQuery.js","path":"src/structures"}},{"name":"data","description":"Data associated with the\ncallback button. Be aware that a\nbad client can send arbitrary\ndata in this field","nullable":true,"type":[[["string"]]],"meta":{"line":79,"file":"CallbackQuery.js","path":"src/structures"}},{"name":"gameShortName","description":"Short name of a Game to be\nreturned, serves as the unique\nidentifier for the game","nullable":true,"type":[[["string"]]],"meta":{"line":89,"file":"CallbackQuery.js","path":"src/structures"}}],"methods":[{"name":"send","description":"Send answers to the callback query","params":[{"name":"content","description":"The text\ncontent to send","type":[[["string"]]]},{"name":"options","description":"Options to\nsend","optional":true,"type":[[["Object"]]]},{"name":"options.show_alert","description":"Whether to show an\nalert instead of notification","optional":true,"type":[[["boolean"]]]},{"name":"options.url","description":"URL that will\nbe opened by the user's client","optional":true,"type":[[["string"]]]},{"name":"options.cache_time","description":"The\nmaximum amount of time in seconds\nthat the result of the callback\nquery may be cached client-side,\ndefaults to 0.","optional":true,"type":[[["number"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":111,"file":"CallbackQuery.js","path":"src/structures"}}],"meta":{"line":11,"file":"CallbackQuery.js","path":"src/structures"}},{"name":"Chat","description":"Represents Chat\nextends {Base}","construct":{"name":"Chat","params":[{"name":"client","description":"The instantiating client","type":[[["Client"]]]},{"name":"data","type":[[["Object"]]]}]},"methods":[{"name":"me","description":"Returns information about the authenticated bot in this chat","returns":[[["Promise","<"],["ChatMember",">"]]],"meta":{"line":75,"file":"Chat.js","path":"src/structures"}},{"name":"fetch","description":"Fetches the fresh data of chat from telegram API","returns":[[["Promise","<"],["Chat",">"]]],"meta":{"line":90,"file":"Chat.js","path":"src/structures"}},{"name":"send","description":"Send a message to the chat","examples":["client.on('message', (msg) => {\nif(msg.content == 'hii') {\n   msg.chat.send('Hello')\n};\n});"],"params":[{"name":"content","description":"The text to send","optional":true,"type":[[["string"]]]},{"name":"options","description":"The message options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":112,"file":"Chat.js","path":"src/structures"}},{"name":"sendPhoto","description":"Send photo","examples":["// Using a local photo\nchat.sendPhoto('./image.png');\n// Using a url\nchat.sendPhoto('https://example.com/image.png');\n// Using a telegram file_id\nchat.sendPhoto({ photo: 'file_id' })"],"params":[{"name":"photo","optional":true,"type":[[["BufferResolvable"]]]},{"name":"options","description":"Options to send","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":137,"file":"Chat.js","path":"src/structures"}},{"name":"sendAudio","description":"Send audio that is playable by the user","params":[{"name":"audio","optional":true,"type":[[["BufferResolvable"]],[["Stream"]]]},{"name":"options","description":"Options to send","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":159,"file":"Chat.js","path":"src/structures"}},{"name":"sendDocument","description":"Send document","params":[{"name":"document","description":"The document to send","optional":true,"type":[[["BufferResolvable"]],[["Stream"]]]},{"name":"thumbnail","description":"Optinal thumbnail","optional":true,"type":[[["BufferResolvable"]],[["Stream"]]]},{"name":"options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":182,"file":"Chat.js","path":"src/structures"}},{"name":"sendVideo","description":"Send video","params":[{"name":"video","description":"The video to send","optional":true,"type":[[["BufferResolvable"]],[["Stream"]]]},{"name":"thumbnail","description":"Optinal thumbnail","optional":true,"type":[[["BufferResolvable"]],[["Stream"]]]},{"name":"options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":212,"file":"Chat.js","path":"src/structures"}},{"name":"sendVideoNote","description":"Send video note","params":[{"name":"video","description":"The video note to send","optional":true,"type":[[["BufferResolvable"]],[["Stream"]]]},{"name":"thumbnail","description":"Optinal thumbnail","optional":true,"type":[[["BufferResolvable"]],[["Stream"]]]},{"name":"options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":245,"file":"Chat.js","path":"src/structures"}},{"name":"sendAnimation","description":"Send animation","params":[{"name":"animation","description":"The animation to send","optional":true,"type":[[["BufferResolvable"]],[["Stream"]]]},{"name":"thumbnail","description":"Optinal thumbnail","optional":true,"type":[[["BufferResolvable"]],[["Stream"]]]},{"name":"options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":278,"file":"Chat.js","path":"src/structures"}},{"name":"sendVoice","description":"Send voice","params":[{"name":"voice","description":"The voice to send","optional":true,"type":[[["BufferResolvable"]],[["Stream"]]]},{"name":"options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":310,"file":"Chat.js","path":"src/structures"}},{"name":"sendLocation","description":"Send location","params":[{"name":"latitude","description":"The latitude of location","type":[[["number"]]]},{"name":"longitude","description":"The longitude of location","type":[[["number"]]]},{"name":"options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":333,"file":"Chat.js","path":"src/structures"}},{"name":"sendMediaGroup","description":"Send media groups","params":[{"name":"media","type":[[["Array"]]]},{"name":"options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Array","<"],["Message",">>"]]],"meta":{"line":352,"file":"Chat.js","path":"src/structures"}},{"name":"sendVenue","description":"Send venue","params":[{"name":"options","type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":380,"file":"Chat.js","path":"src/structures"}},{"name":"sendPoll","description":"Send a poll","params":[{"name":"question","description":"Question of the poll","type":[[["string"]]]},{"name":"answers","description":"Array of answers/options","type":[[["Array","<"],["Array",">"]]]},{"name":"options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":398,"file":"Chat.js","path":"src/structures"}},{"name":"sendQuiz","description":"Send a quiz","params":[{"name":"question","description":"Question of the quiz","type":[[["string"]]]},{"name":"answers","description":"Array of answers to the question","type":[[["Array","<"],["Array",">"]]]},{"name":"answerIndex","description":"The index of the correct answer","type":[[["number"]]]},{"name":"options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":420,"file":"Chat.js","path":"src/structures"}},{"name":"startTyping","description":"Show typing placeholder","returns":[[["Promise","<"],["booleam",">"]]],"meta":{"line":439,"file":"Chat.js","path":"src/structures"}},{"name":"sendChatAction","description":"Send chat action when processing something","params":[{"name":"action","description":"The action to send. This can be:\n* typing\n* upload_photo\n* record_video\n* upload_video\n* record_voice\n* upload_voice\n* upload_document\n* find_location\n* record_video_note\n* upload_video_note","type":[[["string"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":463,"file":"Chat.js","path":"src/structures"}},{"name":"kick","description":"Kicks a member from the chat","params":[{"name":"userId","description":"The id of user to kick","type":[[["string"]]]},{"name":"untilDate","description":"The until date","optional":true,"type":[[["Date"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":478,"file":"Chat.js","path":"src/structures"}},{"name":"unban","description":"Unbans a user from the chat","params":[{"name":"userId","description":"The id of the user to unban","type":[[["string"]]]},{"name":"force","description":"If the user is not banned and force is set to true, the user will be kicked.","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":495,"file":"Chat.js","path":"src/structures"}},{"name":"setPermissions","description":"Set permissions of chat","params":[{"name":"perms","description":"The permission to allow","type":[[["Array"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":510,"file":"Chat.js","path":"src/structures"}},{"name":"createInvite","description":"Creates an invite link of chat","returns":[[["Promise","<"],["string",">"]]],"meta":{"line":523,"file":"Chat.js","path":"src/structures"}},{"name":"setTitle","description":"Sets title of chat","params":[{"name":"title","description":"The title to set","type":[[["string"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":534,"file":"Chat.js","path":"src/structures"}},{"name":"setDescription","description":"Set description of the chat","params":[{"name":"description","type":[[["string"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":548,"file":"Chat.js","path":"src/structures"}},{"name":"setPhoto","description":"Set photo of the chat","params":[{"name":"photo","optional":true,"type":[[["BufferResolvable"]]]},{"name":"options","type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":563,"file":"Chat.js","path":"src/structures"}},{"name":"deletePhoto","description":"Delets chats photo","returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":577,"file":"Chat.js","path":"src/structures"}},{"name":"unpinAllMessages","description":"Unpins all messages","returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":589,"file":"Chat.js","path":"src/structures"}},{"name":"leave","description":"Leaves bot from the chat","returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":601,"file":"Chat.js","path":"src/structures"}},{"name":"getAdmins","description":"Get list og chat admins","returns":[[["Promise","<"],["Array","<"],["ChatMember",">>"]]],"meta":{"line":613,"file":"Chat.js","path":"src/structures"}},{"name":"membersCount","description":"Returns member count of the chat","returns":[[["Promise","<"],["number",">"]]],"meta":{"line":627,"file":"Chat.js","path":"src/structures"}},{"name":"addStickerSet","description":"Add sticker set","params":[{"name":"name","description":"Name of sticker set to add","type":[[["string"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":640,"file":"Chat.js","path":"src/structures"}},{"name":"removeStickerSet","description":"Remove sticker set","params":[{"name":"name","description":"Name of the sticker set to remove","type":[[["string"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":654,"file":"Chat.js","path":"src/structures"}},{"name":"createMessageCollector","description":"Creates a Message Collector.","examples":["// Create a message collector\nconst filter = m => m.content.includes('telegram');\nconst collector = chat.createMessageCollector(filter, { time: 15000 });\ncollector.on('collect', m => console.log(`Collected ${m.content}`));\ncollector.on('end', collected => console.log(`Collected ${collected.size} items`));"],"params":[{"name":"filter","description":"The filter to create the collector with","type":[[["CollectorFilter"]]]},{"name":"options","description":"The options to pass to the collector","optional":true,"default":"{}","type":[[["MessageCollectorOptions"]]]}],"returns":[[["MessageCollector"]]],"meta":{"line":675,"file":"Chat.js","path":"src/structures"}},{"name":"awaitMessages","description":"Similar to createMessageCollector but in promise form.\nResolves with a collection of messages that pass the specified filter.","examples":["// Await /vote messages\nconst filter = m => m.content.startsWith('/vote');\n// Errors: ['time'] treats ending because of the time limit as an error\nchat.awaitMessages(filter, { max: 4, time: 60000, errors: ['time'] })\n  .then(collected => console.log(collected.size))\n  .catch(collected => console.log(`After a minute, only ${collected.size} out of 4 voted.`));"],"params":[{"name":"filter","description":"The filter function to use","type":[[["CollectorFilter"]]]},{"name":"options","description":"Optional options to pass to the internal collector","optional":true,"default":"{}","type":[[["AwaitMessagesOptions"]]]}],"returns":[[["Promise","<"],["Collection","<"],["Sstring",", "],["Message",">>"]]],"meta":{"line":700,"file":"Chat.js","path":"src/structures"}}],"meta":{"line":15,"file":"Chat.js","path":"src/structures"}},{"name":"ChatMember","description":"Represents the ChatMember of a {@see Message}","extends":[[["Base"]]],"construct":{"name":"ChatMember","params":[{"name":"client","description":"The instantiated client","type":[[["Client"]]]},{"name":"chatId","description":"The id of the chat where this member belongs to","type":[[["string"]]]},{"name":"data","type":[[["Object"]]]}]},"props":[{"name":"id","description":"The user id of the member","type":[[["number"]]],"meta":{"line":31,"file":"ChatMember.js","path":"src/structures"}},{"name":"chatID","description":"The id of the chat where this member belongs to","type":[[["number"]]],"meta":{"line":37,"file":"ChatMember.js","path":"src/structures"}},{"name":"user","description":"User object","type":[[["User"]]],"meta":{"line":44,"file":"ChatMember.js","path":"src/structures"}},{"name":"status","description":"The member's status in the chat. This can be\n* creator\n* administrator\n* member\n* restricted\n* left\n* kicked","type":[[["string"]]],"meta":{"line":58,"file":"ChatMember.js","path":"src/structures"}},{"name":"nickname","description":"Custom title of the member.","nullable":true,"type":[[["string"]]],"meta":{"line":66,"file":"ChatMember.js","path":"src/structures"}},{"name":"anonymous","description":"Whether the user presence is hidden or not","nullable":true,"type":[[["Boolean"]]],"meta":{"line":74,"file":"ChatMember.js","path":"src/structures"}},{"name":"unbansAt","description":"Date when restrictions will be lifted for this user","nullable":true,"type":[[["Date"]]],"meta":{"line":84,"file":"ChatMember.js","path":"src/structures"}},{"name":"isRestricted","description":"Whether the user is banned/kicked","readonly":true,"type":[[["boolean"]]],"meta":{"line":93,"file":"ChatMember.js","path":"src/structures"}}],"methods":[{"name":"fetch","description":"Fetch latest data of this member from telegram API","returns":[[["ChatMember"]]],"meta":{"line":101,"file":"ChatMember.js","path":"src/structures"}},{"name":"restrict","description":"Restrict a user by denying permissions","params":[{"name":"perms","type":[[["Object"]]]},{"name":"perms.allow","optional":true,"type":[[["PermissionResolvable"]]]},{"name":"perms.deny","optional":true,"type":[[["PermissionResolvable"]]]},{"name":"perms.untilDate","optional":true,"type":[[["Date"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":120,"file":"ChatMember.js","path":"src/structures"}},{"name":"setPermissions","description":"Set/promote user permissions","params":[{"name":"perms","type":[[["Object"]]]},{"name":"perms.allow","optional":true,"type":[[["PermissionResolvable"]]]},{"name":"perms.deny","optional":true,"type":[[["PermissionResolvable"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":139,"file":"ChatMember.js","path":"src/structures"}},{"name":"setNickName","description":"Set custom title for this chat","params":[{"name":"name","description":"The new name to set","type":[[["string"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":155,"file":"ChatMember.js","path":"src/structures"}}],"meta":{"line":11,"file":"ChatMember.js","path":"src/structures"}},{"name":"ClientUser","description":"Represents the ClientUser structure","extends":[[["User"]]],"props":[{"name":"id","description":"The id of the user","type":[[["number"]]],"meta":{"line":22,"file":"User.js","path":"src/structures"}},{"name":"firstName","description":"First name of the user","type":[[["string"]]],"meta":{"line":31,"file":"User.js","path":"src/structures"}},{"name":"bot","description":"Whether the user is bot or not","type":[[["boolean"]]],"meta":{"line":37,"file":"User.js","path":"src/structures"}},{"name":"lastName","description":"Last name of the user","nullable":true,"type":[[["string"]]],"meta":{"line":43,"file":"User.js","path":"src/structures"}},{"name":"username","description":"Username of the user","nullable":true,"type":[[["string"]]],"meta":{"line":49,"file":"User.js","path":"src/structures"}},{"name":"language","description":"The language of the user","nullable":true,"type":[[["string"]]],"meta":{"line":55,"file":"User.js","path":"src/structures"}}],"methods":[{"name":"fetch","description":"Fetches the client user from API","returns":[[["Promise","<"],["ClientUser",">"]]],"meta":{"line":30,"file":"ClientUser.js","path":"src/structures"}},{"name":"getCommands","description":"Get registered commands in telegram","returns":[[["Promise","<"],["Array","<"],["Object",">>"]]],"meta":{"line":38,"file":"ClientUser.js","path":"src/structures"}},{"name":"setCommands","description":"Set commands in telegram","params":[{"name":"commands","description":"Override existing commands","type":[[["Array","<"],["Object",">"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":47,"file":"ClientUser.js","path":"src/structures"}},{"name":"addCommand","description":"Add command","params":[{"name":"command","description":"Commad name","type":[[["string"]]]},{"name":"description","description":"Command description","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":61,"file":"ClientUser.js","path":"src/structures"}},{"name":"removeCommand","description":"Remove command","params":[{"name":"command","description":"Name of the command to remove","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":87,"file":"ClientUser.js","path":"src/structures"}},{"name":"getPhotos","description":"Get user photos","inherits":"User#getPhotos","inherited":true,"params":[{"name":"offset","description":"Offset","optional":true,"default":0,"type":[[["number"]]]},{"name":"limit","description":"No. of photos to return.","optional":true,"default":100,"type":[[["number"]]]}],"returns":[[["Promise","<"],["Photo",">"]]],"meta":{"line":64,"file":"User.js","path":"src/structures"}}],"meta":{"line":9,"file":"ClientUser.js","path":"src/structures"}},{"name":"CommandManager","description":"Manages Commands and triggers them when it called","extends":[[["Base"]]],"construct":{"name":"CommandManager","params":[{"name":"client","description":"The initiated client","type":[[["Client"]]]}]},"methods":[{"name":"use","description":"The middleware function to run before commands","params":[{"name":"fn","description":"Function to run","type":[[["CommandMiddeware"]]]}],"meta":{"line":35,"file":"CommandManager.js","path":"src/structures"}},{"name":"on","description":"Register command","params":[{"name":"command","description":"The command name","type":[[["string"]]]},{"name":"options","description":"The options to attach with command","type":[[["Object"]]]},{"name":"fn","description":"The function to run whenever command is called","type":[[["void"]]]}],"meta":{"line":46,"file":"CommandManager.js","path":"src/structures"}},{"name":"off","description":"Unregister command","params":[{"name":"command","description":"The command name to delete","type":[[["string"]]]}],"meta":{"line":65,"file":"CommandManager.js","path":"src/structures"}},{"name":"setPrefix","description":"Sets prefix for the commands","params":[{"name":"prefix","description":"The new prefix to set , defaults to \"/\".","optional":true,"default":"/","type":[[["string"]]]}],"meta":{"line":73,"file":"CommandManager.js","path":"src/structures"}},{"name":"trigger","description":"The function which will run whenever a command message is received","params":[{"name":"command","description":"The command name","type":[[["string"]]]},{"name":"message","description":"The message object","type":[[["Message"]]]},{"name":"args","description":"Arguments of message","type":[[["Array"]]]}],"async":true,"meta":{"line":83,"file":"CommandManager.js","path":"src/structures"}}],"meta":{"line":10,"file":"CommandManager.js","path":"src/structures"}},{"name":"InlineChosenResult","description":"Represents the choosen result of InlineQuery","extends":[[["Base"]]],"props":[{"name":"id","description":"The id of the choosen result","type":[[["string"]]],"meta":{"line":21,"file":"InlineChosenResult.js","path":"src/structures"}},{"name":"author","description":"The user who choosen the inline query result","type":[[["User"]]],"meta":{"line":31,"file":"InlineChosenResult.js","path":"src/structures"}},{"name":"query","description":"The query that was used to obtain the result","type":[[["string"]]],"meta":{"line":37,"file":"InlineChosenResult.js","path":"src/structures"}},{"name":"inlineMessageId","description":"Identifier of the sent inline message.","nullable":true,"type":[[["string"]]],"meta":{"line":44,"file":"InlineChosenResult.js","path":"src/structures"}},{"name":"location","description":"Sender location, only for bots that require user location","nullable":true,"type":[[["Location"]]],"meta":{"line":52,"file":"InlineChosenResult.js","path":"src/structures"}}],"meta":{"line":11,"file":"InlineChosenResult.js","path":"src/structures"}},{"name":"InlineQuery","description":"Represents the InlineQuery","extends":[[["Base"]]],"props":[{"name":"id","description":"The id of the inline query","type":[[["string"]]],"meta":{"line":20,"file":"InlineQuery.js","path":"src/structures"}},{"name":"author","description":"The user who triggered the inline query","type":[[["User"]]],"meta":{"line":30,"file":"InlineQuery.js","path":"src/structures"}},{"name":"query","description":"Text of the query","type":[[["string"]]],"meta":{"line":36,"file":"InlineQuery.js","path":"src/structures"}},{"name":"location","description":"Sender location, only for bots\nthat request user location","nullable":true,"type":[[["Location"]]],"meta":{"line":49,"file":"InlineQuery.js","path":"src/structures"}}],"methods":[{"name":"send","description":"Send results to inline query","params":[{"name":"results","description":"Array of\nInlineQueryResult","type":[[["Array"]]]},{"name":"options","description":"Options for\nsending inline query result","optional":true,"type":[[["Object"]]]},{"name":"[options.cache_tim\n=300]","description":"The maximum amount of time in\nseconds that the result of the inline\nquery may be cached on the server.","type":[[["number"]]]},{"name":"options.is_personnel","description":"Pass true, if results\nmay be cached on the server side only\nfor the user that sent the query","optional":true,"type":[[["boolean"]]]},{"name":"options.next_offset","description":"Pass the offset that a client should\nsend in the next query with the same\ntext to receive more results","optional":true,"type":[[["string"]]]},{"name":"options.switch_pm_text","description":"If passed, clients\nwill display a button with specified\ntext that switches the user to a\nprivate chat with the bot and sends\nthe bot a start message with the\nparameter","optional":true,"type":[[["string"]]]},{"name":"options.switch_pm_parameter","description":"Deep-linking\nparameter for the /start message sent\nto the bot when user presses the\nswitch button","optional":true,"type":[[["string"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":82,"file":"InlineQuery.js","path":"src/structures"}}],"meta":{"line":10,"file":"InlineQuery.js","path":"src/structures"}},{"name":"Location","description":"Represents the location structure","props":[{"name":"longitude","description":"Longitude of the location","type":[[["number"]]],"meta":{"line":12,"file":"Location.js","path":"src/structures"}},{"name":"latitude","description":"Latitude of the location","type":[[["number"]]],"meta":{"line":18,"file":"Location.js","path":"src/structures"}},{"name":"heading","description":"The direction in which user is moving, in degrees; 1-360. For active live locations only","nullable":true,"type":[[["string"]]],"meta":{"line":25,"file":"Location.js","path":"src/structures"}},{"name":"livePeriod","description":"Time relative to the message\nsending date, during which the\nlocation can be updated, in\nseconds. For active live\nlocations only","type":[[["number"]]],"meta":{"line":37,"file":"Location.js","path":"src/structures"}},{"name":"url","description":"Get google map url for this location","readonly":true,"type":[[["string"]]],"meta":{"line":67,"file":"Location.js","path":"src/structures"}}],"meta":{"line":6,"file":"Location.js","path":"src/structures"}},{"name":"Markup","description":"Represents the reply markup","props":[{"name":"button","description":"Button of the markup","scope":"static","type":[[["MarkupButton"]]],"meta":{"line":18,"file":"Markup.js","path":"src/structures"}}],"methods":[{"name":"selective","description":"When set to true the inine/keyboard will show to message author only","params":[{"name":"value","optional":true,"default":true,"type":[[["boolean"]]]}],"returns":[[["Markup"]]],"meta":{"line":27,"file":"Markup.js","path":"src/structures"}},{"name":"resize","description":"Resizes the keyboard","params":[{"name":"value","optional":true,"default":true,"type":[[["boolean"]]]}],"returns":[[["Markup"]]],"meta":{"line":39,"file":"Markup.js","path":"src/structures"}},{"name":"oneTime","description":"Make keyboard shows only one time","params":[{"name":"value","optional":true,"default":true,"type":[[["boolean"]]]}],"returns":[[["Markup"]]],"meta":{"line":51,"file":"Markup.js","path":"src/structures"}},{"name":"keyboard","description":"Keyboard","scope":"static","params":[{"name":"data","type":[[["Array","<"],["MarkupButton",">"]]]}],"returns":[[["Markup"]]],"meta":{"line":63,"file":"Markup.js","path":"src/structures"}},{"name":"inlineKeyboard","description":"Inline keyboard","scope":"static","params":[{"name":"data","type":[[["Array","<"],["MarkupButton",">"]]]}],"returns":[[["Markup"]]],"meta":{"line":74,"file":"Markup.js","path":"src/structures"}},{"name":"removeKeyboard","description":"Removes keyboard menu","scope":"static","params":[{"name":"value","optional":true,"default":true,"type":[[["boolean"]]]}],"returns":[[["Markup"]]],"meta":{"line":85,"file":"Markup.js","path":"src/structures"}},{"name":"forceReply","description":"Force reply","scope":"static","params":[{"name":"value","optional":true,"default":true,"type":[[["boolean"]]]}],"returns":[[["Markup"]]],"meta":{"line":96,"file":"Markup.js","path":"src/structures"}}],"meta":{"line":9,"file":"Markup.js","path":"src/structures"}},{"name":"MarkupButton","description":"Represents the markup button","methods":[{"name":"text","description":"Text button with optional callback","scope":"static","params":[{"name":"content","description":"The text of the button","type":[[["string"]]]},{"name":"callbackData","description":"The data to sent to the callback whene button is pressed","optional":true,"type":[[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":13,"file":"MarkupButton.js","path":"src/structures"}},{"name":"url","description":"Shows a clickable button","scope":"static","params":[{"name":"text","description":"The text of the link","type":[[["string"]]]},{"name":"url","description":"A http url","type":[[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":26,"file":"MarkupButton.js","path":"src/structures"}},{"name":"login","description":"Shows a button which promts user to login","scope":"static","params":[{"name":"text","description":"The text of the button","type":[[["string"]]]},{"name":"url","description":"A http url","type":[[["string"]]]},{"name":"forward_text","description":"The text for the forward message","optional":true,"type":[[["string"]]]},{"name":"bot_username","description":"Bot username to show in the login prompt","optional":true,"type":[[["string"]]]},{"name":"request_write_access","description":"Request write access","optional":true,"default":false,"type":[[["boolea"]]]}],"returns":[[["Object"]]],"meta":{"line":42,"file":"MarkupButton.js","path":"src/structures"}},{"name":"switchToChat","description":"Allows switching of a chat and places the specified query in the input box","scope":"static","params":[{"name":"text","description":"Text of the button","type":[[["string"]]]},{"name":"query","description":"Inline query to be sent when the button is pressed","type":[[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":60,"file":"MarkupButton.js","path":"src/structures"}},{"name":"inputQuery","description":"Places the specified query in the input box of the current chat","scope":"static","params":[{"name":"text","description":"The text of the button","type":[[["string"]]]},{"name":"query","description":"The inline query to be sent when the button is pressed","type":[[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":73,"file":"MarkupButton.js","path":"src/structures"}},{"name":"callbackGame","description":"Callback game","scope":"static","params":[{"name":"text","description":"The text of the button","type":[[["string"]]]},{"name":"game","type":[[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":85,"file":"MarkupButton.js","path":"src/structures"}},{"name":"pay","description":"Shows a pay button","scope":"static","params":[{"name":"text","description":"The text of the pay button","type":[[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":97,"file":"MarkupButton.js","path":"src/structures"}},{"name":"requestContact","description":"Request contact from the user","scope":"static","params":[{"name":"text","description":"The text of the button","type":[[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":109,"file":"MarkupButton.js","path":"src/structures"}},{"name":"requestLocation","description":"Request location of the user","scope":"static","params":[{"name":"text","description":"The text of the button","type":[[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":121,"file":"MarkupButton.js","path":"src/structures"}},{"name":"requestPoll","description":"Request user to do a poll","scope":"static","params":[{"name":"text","description":"The text of the button","type":[[["string"]]]},{"name":"pollType","description":"Type of the poll to request. This can be either `regular` or `quiz`","optional":true,"default":"regular","type":[[["string"]]]}],"returns":[[["Object"]]],"meta":{"line":134,"file":"MarkupButton.js","path":"src/structures"}}],"meta":{"line":6,"file":"MarkupButton.js","path":"src/structures"}},{"name":"Animation","description":"Represents the animation","extends":[[["File"]]],"props":[{"name":"width","description":"Width of the animation","type":[[["number"]]],"meta":{"line":18,"file":"Animation.js","path":"src/structures/media"}},{"name":"height","description":"Height of the animation","type":[[["number"]]],"meta":{"line":24,"file":"Animation.js","path":"src/structures/media"}},{"name":"duration","description":"Duration of the animation in seconds","type":[[["number"]]],"meta":{"line":30,"file":"Animation.js","path":"src/structures/media"}},{"name":"name","description":"The animation/video file name","nullable":true,"type":[[["string"]]],"meta":{"line":37,"file":"Animation.js","path":"src/structures/media"}},{"name":"thumbnail","description":"Animation thumbnail","nullable":true,"type":[[["Photo"]]],"meta":{"line":45,"file":"Animation.js","path":"src/structures/media"}},{"name":"mimeType","description":"Mime type of the animation","nullable":true,"type":[[["string"]]],"meta":{"line":53,"file":"Animation.js","path":"src/structures/media"}},{"name":"id","description":"Identifier of the file","type":[[["string"]]],"meta":{"line":17,"file":"File.js","path":"src/structures/media"}},{"name":"uniqueId","description":"Unique identifier for this file, which is supposed to be the same over time and for different bots","type":[[["string"]]],"meta":{"line":23,"file":"File.js","path":"src/structures/media"}},{"name":"size","description":"Size of the file","nullable":true,"type":[[["number"]]],"meta":{"line":29,"file":"File.js","path":"src/structures/media"}},{"name":"path","description":"Path of the file","nullable":true,"type":[[["string"]]],"meta":{"line":36,"file":"File.js","path":"src/structures/media"}},{"name":"url","description":"Url of the file","nullable":true,"type":[[["string"]]],"meta":{"line":44,"file":"File.js","path":"src/structures/media"}}],"methods":[{"name":"setFile","description":"Set file","inherits":"File#setFile","inherited":true,"params":[{"name":"file","description":"The file to set","type":[[["BufferResolvable"]],[["Stream"]]]}],"returns":[[["File"]]],"meta":{"line":54,"file":"File.js","path":"src/structures/media"}},{"name":"fetch","description":"Fetch the file from API.","inherits":"File#fetch","inherited":true,"params":[{"name":"id","description":"The identifier of the file","type":[[["string"]]]}],"returns":[[["Promise","<"],["File",">"]]],"meta":{"line":64,"file":"File.js","path":"src/structures/media"}},{"name":"download","description":"Download the file","inherits":"File#download","inherited":true,"returns":[[["Promise","<"],["Stream",">"]]],"meta":{"line":76,"file":"File.js","path":"src/structures/media"}}],"meta":{"line":10,"file":"Animation.js","path":"src/structures/media"}},{"name":"Audio","description":"Represents the audio","extends":[[["File"]]],"props":[{"name":"duration","description":"Duration of the audio in seconds","type":[[["number"]]],"meta":{"line":18,"file":"Audio.js","path":"src/structures/media"}},{"name":"title","description":"Title of the audio","nullable":true,"type":[[["string"]]],"meta":{"line":25,"file":"Audio.js","path":"src/structures/media"}},{"name":"performer","description":"Performer of the audio","nullable":true,"type":[[["string"]]],"meta":{"line":33,"file":"Audio.js","path":"src/structures/media"}},{"name":"name","description":"The audio file name","nullable":true,"type":[[["string"]]],"meta":{"line":41,"file":"Audio.js","path":"src/structures/media"}},{"name":"thumbnail","description":"Thumbnail of the album cover to which the music file belongs","nullable":true,"type":[[["Photo"]]],"meta":{"line":49,"file":"Audio.js","path":"src/structures/media"}},{"name":"mimeType","description":"Mime type of the animation","nullable":true,"type":[[["string"]]],"meta":{"line":57,"file":"Audio.js","path":"src/structures/media"}},{"name":"id","description":"Identifier of the file","type":[[["string"]]],"meta":{"line":17,"file":"File.js","path":"src/structures/media"}},{"name":"uniqueId","description":"Unique identifier for this file, which is supposed to be the same over time and for different bots","type":[[["string"]]],"meta":{"line":23,"file":"File.js","path":"src/structures/media"}},{"name":"size","description":"Size of the file","nullable":true,"type":[[["number"]]],"meta":{"line":29,"file":"File.js","path":"src/structures/media"}},{"name":"path","description":"Path of the file","nullable":true,"type":[[["string"]]],"meta":{"line":36,"file":"File.js","path":"src/structures/media"}},{"name":"url","description":"Url of the file","nullable":true,"type":[[["string"]]],"meta":{"line":44,"file":"File.js","path":"src/structures/media"}}],"methods":[{"name":"setFile","description":"Set file","inherits":"File#setFile","inherited":true,"params":[{"name":"file","description":"The file to set","type":[[["BufferResolvable"]],[["Stream"]]]}],"returns":[[["File"]]],"meta":{"line":54,"file":"File.js","path":"src/structures/media"}},{"name":"fetch","description":"Fetch the file from API.","inherits":"File#fetch","inherited":true,"params":[{"name":"id","description":"The identifier of the file","type":[[["string"]]]}],"returns":[[["Promise","<"],["File",">"]]],"meta":{"line":64,"file":"File.js","path":"src/structures/media"}},{"name":"download","description":"Download the file","inherits":"File#download","inherited":true,"returns":[[["Promise","<"],["Stream",">"]]],"meta":{"line":76,"file":"File.js","path":"src/structures/media"}}],"meta":{"line":10,"file":"Audio.js","path":"src/structures/media"}},{"name":"Contact","description":"Represents the contact","extends":[[["File"]]],"props":[{"name":"phoneNumber","description":"Contact's phone number","type":[[["string"]]],"meta":{"line":13,"file":"Contact.js","path":"src/structures/media"}},{"name":"firstName","description":"Contact's firstname","type":[[["string"]]],"meta":{"line":19,"file":"Contact.js","path":"src/structures/media"}},{"name":"lastName","description":"Contact's lastname","nullable":true,"type":[[["string"]]],"meta":{"line":26,"file":"Contact.js","path":"src/structures/media"}},{"name":"userId","description":"Contact's user identifier","nullable":true,"type":[[["number"]]],"meta":{"line":34,"file":"Contact.js","path":"src/structures/media"}},{"name":"vcard","description":"Additional data about the data (see {@link https://en.m.wikipedia.org/wiki/VCard|vCard})","nullable":true,"type":[[["string"]]],"meta":{"line":42,"file":"Contact.js","path":"src/structures/media"}},{"name":"id","description":"Identifier of the file","type":[[["string"]]],"meta":{"line":17,"file":"File.js","path":"src/structures/media"}},{"name":"uniqueId","description":"Unique identifier for this file, which is supposed to be the same over time and for different bots","type":[[["string"]]],"meta":{"line":23,"file":"File.js","path":"src/structures/media"}},{"name":"size","description":"Size of the file","nullable":true,"type":[[["number"]]],"meta":{"line":29,"file":"File.js","path":"src/structures/media"}},{"name":"path","description":"Path of the file","nullable":true,"type":[[["string"]]],"meta":{"line":36,"file":"File.js","path":"src/structures/media"}},{"name":"url","description":"Url of the file","nullable":true,"type":[[["string"]]],"meta":{"line":44,"file":"File.js","path":"src/structures/media"}}],"methods":[{"name":"setFile","description":"Set file","inherits":"File#setFile","inherited":true,"params":[{"name":"file","description":"The file to set","type":[[["BufferResolvable"]],[["Stream"]]]}],"returns":[[["File"]]],"meta":{"line":54,"file":"File.js","path":"src/structures/media"}},{"name":"fetch","description":"Fetch the file from API.","inherits":"File#fetch","inherited":true,"params":[{"name":"id","description":"The identifier of the file","type":[[["string"]]]}],"returns":[[["Promise","<"],["File",">"]]],"meta":{"line":64,"file":"File.js","path":"src/structures/media"}},{"name":"download","description":"Download the file","inherits":"File#download","inherited":true,"returns":[[["Promise","<"],["Stream",">"]]],"meta":{"line":76,"file":"File.js","path":"src/structures/media"}}],"meta":{"line":7,"file":"Contact.js","path":"src/structures/media"}},{"name":"Dice","description":"Represents the dice in a message","meta":{"line":6,"file":"Dice.js","path":"src/structures/media"}},{"name":"Document","description":"Represents the document","extends":[[["File"]]],"props":[{"name":"name","description":"The document file name","nullable":true,"type":[[["string"]]],"meta":{"line":19,"file":"Document.js","path":"src/structures/media"}},{"name":"thumbnail","description":"Document thumbnail","nullable":true,"type":[[["Photo"]]],"meta":{"line":27,"file":"Document.js","path":"src/structures/media"}},{"name":"mimeType","description":"Mime type of the document","nullable":true,"type":[[["string"]]],"meta":{"line":35,"file":"Document.js","path":"src/structures/media"}},{"name":"id","description":"Identifier of the file","type":[[["string"]]],"meta":{"line":17,"file":"File.js","path":"src/structures/media"}},{"name":"uniqueId","description":"Unique identifier for this file, which is supposed to be the same over time and for different bots","type":[[["string"]]],"meta":{"line":23,"file":"File.js","path":"src/structures/media"}},{"name":"size","description":"Size of the file","nullable":true,"type":[[["number"]]],"meta":{"line":29,"file":"File.js","path":"src/structures/media"}},{"name":"path","description":"Path of the file","nullable":true,"type":[[["string"]]],"meta":{"line":36,"file":"File.js","path":"src/structures/media"}},{"name":"url","description":"Url of the file","nullable":true,"type":[[["string"]]],"meta":{"line":44,"file":"File.js","path":"src/structures/media"}}],"methods":[{"name":"setFile","description":"Set file","inherits":"File#setFile","inherited":true,"params":[{"name":"file","description":"The file to set","type":[[["BufferResolvable"]],[["Stream"]]]}],"returns":[[["File"]]],"meta":{"line":54,"file":"File.js","path":"src/structures/media"}},{"name":"fetch","description":"Fetch the file from API.","inherits":"File#fetch","inherited":true,"params":[{"name":"id","description":"The identifier of the file","type":[[["string"]]]}],"returns":[[["Promise","<"],["File",">"]]],"meta":{"line":64,"file":"File.js","path":"src/structures/media"}},{"name":"download","description":"Download the file","inherits":"File#download","inherited":true,"returns":[[["Promise","<"],["Stream",">"]]],"meta":{"line":76,"file":"File.js","path":"src/structures/media"}}],"meta":{"line":10,"file":"Document.js","path":"src/structures/media"}},{"name":"File","description":"Represents the file in a message","props":[{"name":"id","description":"Identifier of the file","type":[[["string"]]],"meta":{"line":17,"file":"File.js","path":"src/structures/media"}},{"name":"uniqueId","description":"Unique identifier for this file, which is supposed to be the same over time and for different bots","type":[[["string"]]],"meta":{"line":23,"file":"File.js","path":"src/structures/media"}},{"name":"size","description":"Size of the file","nullable":true,"type":[[["number"]]],"meta":{"line":29,"file":"File.js","path":"src/structures/media"}},{"name":"path","description":"Path of the file","nullable":true,"type":[[["string"]]],"meta":{"line":36,"file":"File.js","path":"src/structures/media"}},{"name":"url","description":"Url of the file","nullable":true,"type":[[["string"]]],"meta":{"line":44,"file":"File.js","path":"src/structures/media"}}],"methods":[{"name":"setFile","description":"Set file","params":[{"name":"file","description":"The file to set","type":[[["BufferResolvable"]],[["Stream"]]]}],"returns":[[["File"]]],"meta":{"line":54,"file":"File.js","path":"src/structures/media"}},{"name":"fetch","description":"Fetch the file from API.","params":[{"name":"id","description":"The identifier of the file","type":[[["string"]]]}],"returns":[[["Promise","<"],["File",">"]]],"meta":{"line":64,"file":"File.js","path":"src/structures/media"}},{"name":"download","description":"Download the file","returns":[[["Promise","<"],["Stream",">"]]],"meta":{"line":76,"file":"File.js","path":"src/structures/media"}}],"meta":{"line":9,"file":"File.js","path":"src/structures/media"}},{"name":"Photo","description":"Represents the photo in a message","extends":[[["File"]]],"props":[{"name":"width","description":"Width of the photo","type":[[["number"]]],"meta":{"line":16,"file":"Photo.js","path":"src/structures/media"}},{"name":"height","description":"Height of the photo","type":[[["number"]]],"meta":{"line":22,"file":"Photo.js","path":"src/structures/media"}},{"name":"id","description":"Identifier of the file","type":[[["string"]]],"meta":{"line":17,"file":"File.js","path":"src/structures/media"}},{"name":"uniqueId","description":"Unique identifier for this file, which is supposed to be the same over time and for different bots","type":[[["string"]]],"meta":{"line":23,"file":"File.js","path":"src/structures/media"}},{"name":"size","description":"Size of the file","nullable":true,"type":[[["number"]]],"meta":{"line":29,"file":"File.js","path":"src/structures/media"}},{"name":"path","description":"Path of the file","nullable":true,"type":[[["string"]]],"meta":{"line":36,"file":"File.js","path":"src/structures/media"}},{"name":"url","description":"Url of the file","nullable":true,"type":[[["string"]]],"meta":{"line":44,"file":"File.js","path":"src/structures/media"}}],"methods":[{"name":"setFile","description":"Set file","inherits":"File#setFile","inherited":true,"params":[{"name":"file","description":"The file to set","type":[[["BufferResolvable"]],[["Stream"]]]}],"returns":[[["File"]]],"meta":{"line":54,"file":"File.js","path":"src/structures/media"}},{"name":"fetch","description":"Fetch the file from API.","inherits":"File#fetch","inherited":true,"params":[{"name":"id","description":"The identifier of the file","type":[[["string"]]]}],"returns":[[["Promise","<"],["File",">"]]],"meta":{"line":64,"file":"File.js","path":"src/structures/media"}},{"name":"download","description":"Download the file","inherits":"File#download","inherited":true,"returns":[[["Promise","<"],["Stream",">"]]],"meta":{"line":76,"file":"File.js","path":"src/structures/media"}}],"meta":{"line":9,"file":"Photo.js","path":"src/structures/media"}},{"name":"Poll","description":"Represents the poll","props":[{"name":"id","description":"Identifier of the poll","type":[[["string"]]],"meta":{"line":18,"file":"Poll.js","path":"src/structures/media"}},{"name":"type","description":"Type of poll. This can be:\n* regular\n* quiz","type":[[["string"]]],"meta":{"line":26,"file":"Poll.js","path":"src/structures/media"}},{"name":"question","description":"Poll question","type":[[["string"]]],"meta":{"line":32,"file":"Poll.js","path":"src/structures/media"}},{"name":"options","description":"List of poll options","type":[[["Array","<"],["Array",">"]]],"meta":{"line":38,"file":"Poll.js","path":"src/structures/media"}},{"name":"correctOptionIndex","description":"The index of the correct poll options","nullable":true,"type":[[["number"]]],"meta":{"line":45,"file":"Poll.js","path":"src/structures/media"}},{"name":"totalVoters","description":"Total number of users voted to the poll","type":[[["number"]]],"meta":{"line":52,"file":"Poll.js","path":"src/structures/media"}},{"name":"multipleChoices","description":"Whether poll allows multiple answers or not","type":[[["boolean"]]],"meta":{"line":58,"file":"Poll.js","path":"src/structures/media"}},{"name":"isClosed","description":"Whether the poll is closed or bot","nullable":true,"type":[[["boolean"]]],"meta":{"line":65,"file":"Poll.js","path":"src/structures/media"}},{"name":"isAnonymous","description":"Whether the poll is anonymous or not","nullable":true,"type":[[["boolean"]]],"meta":{"line":73,"file":"Poll.js","path":"src/structures/media"}},{"name":"explanation","description":"Text that is shown when a user chooses an incorrect answer or taps on the lamp icon in a quiz-style poll","nullable":true,"type":[[["string"]]],"meta":{"line":81,"file":"Poll.js","path":"src/structures/media"}},{"name":"entities","description":"Entities of explanation","nullable":true,"type":[[["MessageEntity"]]],"meta":{"line":89,"file":"Poll.js","path":"src/structures/media"}},{"name":"openPeriod","description":"Amount of time in seconds the poll will be active after creation","nullable":true,"type":[[["number"]]],"meta":{"line":97,"file":"Poll.js","path":"src/structures/media"}},{"name":"closeDate","description":"Point in time (Unix timestamp) when the poll will be automatically closed","nullable":true,"type":[[["Date"]]],"meta":{"line":105,"file":"Poll.js","path":"src/structures/media"}},{"name":"correctOption","description":"Get correct poll option","type":[[["Object"]]],"meta":{"line":113,"file":"Poll.js","path":"src/structures/media"}}],"meta":{"line":8,"file":"Poll.js","path":"src/structures/media"}},{"name":"Sticker","description":"Represents the sticker.","extends":[[["File"]]],"props":[{"name":"width","description":"Width of the sticker","type":[[["number"]]],"meta":{"line":18,"file":"Sticker.js","path":"src/structures/media"}},{"name":"height","description":"Height of the sticker","type":[[["number"]]],"meta":{"line":24,"file":"Sticker.js","path":"src/structures/media"}},{"name":"isAnimated","description":"Whether the sticker is animated or not","type":[[["boolean"]]],"meta":{"line":30,"file":"Sticker.js","path":"src/structures/media"}},{"name":"thumbnail","description":"Thumbnail of the sticker","nullable":true,"type":[[["Photo"]]],"meta":{"line":37,"file":"Sticker.js","path":"src/structures/media"}},{"name":"emoji","description":"The emoji of the sticker","nullable":true,"type":[[["string"]]],"meta":{"line":45,"file":"Sticker.js","path":"src/structures/media"}},{"name":"setName","description":"Sticker set name","nullable":true,"type":[[["string"]]],"meta":{"line":53,"file":"Sticker.js","path":"src/structures/media"}},{"name":"maskPosition","description":"Mask position","type":[[["Object"]]],"meta":{"line":61,"file":"Sticker.js","path":"src/structures/media"}},{"name":"id","description":"Identifier of the file","type":[[["string"]]],"meta":{"line":17,"file":"File.js","path":"src/structures/media"}},{"name":"uniqueId","description":"Unique identifier for this file, which is supposed to be the same over time and for different bots","type":[[["string"]]],"meta":{"line":23,"file":"File.js","path":"src/structures/media"}},{"name":"size","description":"Size of the file","nullable":true,"type":[[["number"]]],"meta":{"line":29,"file":"File.js","path":"src/structures/media"}},{"name":"path","description":"Path of the file","nullable":true,"type":[[["string"]]],"meta":{"line":36,"file":"File.js","path":"src/structures/media"}},{"name":"url","description":"Url of the file","nullable":true,"type":[[["string"]]],"meta":{"line":44,"file":"File.js","path":"src/structures/media"}}],"methods":[{"name":"setFile","description":"Set file","inherits":"File#setFile","inherited":true,"params":[{"name":"file","description":"The file to set","type":[[["BufferResolvable"]],[["Stream"]]]}],"returns":[[["File"]]],"meta":{"line":54,"file":"File.js","path":"src/structures/media"}},{"name":"fetch","description":"Fetch the file from API.","inherits":"File#fetch","inherited":true,"params":[{"name":"id","description":"The identifier of the file","type":[[["string"]]]}],"returns":[[["Promise","<"],["File",">"]]],"meta":{"line":64,"file":"File.js","path":"src/structures/media"}},{"name":"download","description":"Download the file","inherits":"File#download","inherited":true,"returns":[[["Promise","<"],["Stream",">"]]],"meta":{"line":76,"file":"File.js","path":"src/structures/media"}}],"meta":{"line":10,"file":"Sticker.js","path":"src/structures/media"}},{"name":"Video","description":"Represents the video","extends":[[["File"]]],"props":[{"name":"width","description":"Width of the video","type":[[["number"]]],"meta":{"line":18,"file":"Video.js","path":"src/structures/media"}},{"name":"height","description":"Height of the video","type":[[["number"]]],"meta":{"line":24,"file":"Video.js","path":"src/structures/media"}},{"name":"duration","description":"Duration of the video in seconds","type":[[["number"]]],"meta":{"line":30,"file":"Video.js","path":"src/structures/media"}},{"name":"name","description":"The video file name","nullable":true,"type":[[["string"]]],"meta":{"line":37,"file":"Video.js","path":"src/structures/media"}},{"name":"thumbnail","description":"Thumbnail of video","nullable":true,"type":[[["Photo"]]],"meta":{"line":45,"file":"Video.js","path":"src/structures/media"}},{"name":"mimeType","description":"Mime type of the video","nullable":true,"type":[[["string"]]],"meta":{"line":53,"file":"Video.js","path":"src/structures/media"}},{"name":"id","description":"Identifier of the file","type":[[["string"]]],"meta":{"line":17,"file":"File.js","path":"src/structures/media"}},{"name":"uniqueId","description":"Unique identifier for this file, which is supposed to be the same over time and for different bots","type":[[["string"]]],"meta":{"line":23,"file":"File.js","path":"src/structures/media"}},{"name":"size","description":"Size of the file","nullable":true,"type":[[["number"]]],"meta":{"line":29,"file":"File.js","path":"src/structures/media"}},{"name":"path","description":"Path of the file","nullable":true,"type":[[["string"]]],"meta":{"line":36,"file":"File.js","path":"src/structures/media"}},{"name":"url","description":"Url of the file","nullable":true,"type":[[["string"]]],"meta":{"line":44,"file":"File.js","path":"src/structures/media"}}],"methods":[{"name":"setFile","description":"Set file","inherits":"File#setFile","inherited":true,"params":[{"name":"file","description":"The file to set","type":[[["BufferResolvable"]],[["Stream"]]]}],"returns":[[["File"]]],"meta":{"line":54,"file":"File.js","path":"src/structures/media"}},{"name":"fetch","description":"Fetch the file from API.","inherits":"File#fetch","inherited":true,"params":[{"name":"id","description":"The identifier of the file","type":[[["string"]]]}],"returns":[[["Promise","<"],["File",">"]]],"meta":{"line":64,"file":"File.js","path":"src/structures/media"}},{"name":"download","description":"Download the file","inherits":"File#download","inherited":true,"returns":[[["Promise","<"],["Stream",">"]]],"meta":{"line":76,"file":"File.js","path":"src/structures/media"}}],"meta":{"line":10,"file":"Video.js","path":"src/structures/media"}},{"name":"VideoNote","description":"Represents the video note","extends":[[["File"]]],"props":[{"name":"length","description":"Diameter of the video message","type":[[["number"]]],"meta":{"line":18,"file":"VideoNote.js","path":"src/structures/media"}},{"name":"duration","description":"Duration of the video note in seconds","type":[[["number"]]],"meta":{"line":24,"file":"VideoNote.js","path":"src/structures/media"}},{"name":"thumbnail","description":"Thumbnail of video note","nullable":true,"type":[[["Photo"]]],"meta":{"line":31,"file":"VideoNote.js","path":"src/structures/media"}},{"name":"id","description":"Identifier of the file","type":[[["string"]]],"meta":{"line":17,"file":"File.js","path":"src/structures/media"}},{"name":"uniqueId","description":"Unique identifier for this file, which is supposed to be the same over time and for different bots","type":[[["string"]]],"meta":{"line":23,"file":"File.js","path":"src/structures/media"}},{"name":"size","description":"Size of the file","nullable":true,"type":[[["number"]]],"meta":{"line":29,"file":"File.js","path":"src/structures/media"}},{"name":"path","description":"Path of the file","nullable":true,"type":[[["string"]]],"meta":{"line":36,"file":"File.js","path":"src/structures/media"}},{"name":"url","description":"Url of the file","nullable":true,"type":[[["string"]]],"meta":{"line":44,"file":"File.js","path":"src/structures/media"}}],"methods":[{"name":"setFile","description":"Set file","inherits":"File#setFile","inherited":true,"params":[{"name":"file","description":"The file to set","type":[[["BufferResolvable"]],[["Stream"]]]}],"returns":[[["File"]]],"meta":{"line":54,"file":"File.js","path":"src/structures/media"}},{"name":"fetch","description":"Fetch the file from API.","inherits":"File#fetch","inherited":true,"params":[{"name":"id","description":"The identifier of the file","type":[[["string"]]]}],"returns":[[["Promise","<"],["File",">"]]],"meta":{"line":64,"file":"File.js","path":"src/structures/media"}},{"name":"download","description":"Download the file","inherits":"File#download","inherited":true,"returns":[[["Promise","<"],["Stream",">"]]],"meta":{"line":76,"file":"File.js","path":"src/structures/media"}}],"meta":{"line":10,"file":"VideoNote.js","path":"src/structures/media"}},{"name":"Voice","description":"Represents the voice","extends":[[["File"]]],"props":[{"name":"duration","description":"Duration of the voice in seconds","nullable":true,"type":[[["number"]]],"meta":{"line":17,"file":"Voice.js","path":"src/structures/media"}},{"name":"mimeType","description":"Mime type of the voice","nullable":true,"type":[[["string"]]],"meta":{"line":23,"file":"Voice.js","path":"src/structures/media"}},{"name":"id","description":"Identifier of the file","type":[[["string"]]],"meta":{"line":17,"file":"File.js","path":"src/structures/media"}},{"name":"uniqueId","description":"Unique identifier for this file, which is supposed to be the same over time and for different bots","type":[[["string"]]],"meta":{"line":23,"file":"File.js","path":"src/structures/media"}},{"name":"size","description":"Size of the file","nullable":true,"type":[[["number"]]],"meta":{"line":29,"file":"File.js","path":"src/structures/media"}},{"name":"path","description":"Path of the file","nullable":true,"type":[[["string"]]],"meta":{"line":36,"file":"File.js","path":"src/structures/media"}},{"name":"url","description":"Url of the file","nullable":true,"type":[[["string"]]],"meta":{"line":44,"file":"File.js","path":"src/structures/media"}}],"methods":[{"name":"setFile","description":"Set file","inherits":"File#setFile","inherited":true,"params":[{"name":"file","description":"The file to set","type":[[["BufferResolvable"]],[["Stream"]]]}],"returns":[[["File"]]],"meta":{"line":54,"file":"File.js","path":"src/structures/media"}},{"name":"fetch","description":"Fetch the file from API.","inherits":"File#fetch","inherited":true,"params":[{"name":"id","description":"The identifier of the file","type":[[["string"]]]}],"returns":[[["Promise","<"],["File",">"]]],"meta":{"line":64,"file":"File.js","path":"src/structures/media"}},{"name":"download","description":"Download the file","inherits":"File#download","inherited":true,"returns":[[["Promise","<"],["Stream",">"]]],"meta":{"line":76,"file":"File.js","path":"src/structures/media"}}],"meta":{"line":9,"file":"Voice.js","path":"src/structures/media"}},{"name":"Message","description":"Represents message in a chat\nextends {Base}","props":[{"name":"client","description":"The instantiated client","type":[[["Client"]]],"meta":{"line":33,"file":"Message.js","path":"src/structures"}},{"name":"id","description":"The id of the message","type":[[["string"]]],"meta":{"line":39,"file":"Message.js","path":"src/structures"}},{"name":"type","description":"The message type","type":[[["MessageTypes"]]],"meta":{"line":47,"file":"Message.js","path":"src/structures"}},{"name":"createdAt","description":"The timestamp at which this message was created","type":[[["Date"]]],"meta":{"line":55,"file":"Message.js","path":"src/structures"}},{"name":"editedAt","description":"The timestamp at which this message was edited","nullable":true,"type":[[["Date"]]],"meta":{"line":61,"file":"Message.js","path":"src/structures"}},{"name":"author","description":"The author of the message","type":[[["User"]]],"meta":{"line":68,"file":"Message.js","path":"src/structures"}},{"name":"content","description":"The text content of the message","nullable":true,"type":[[["string"]]],"meta":{"line":78,"file":"Message.js","path":"src/structures"}},{"name":"chat","description":"The chat the message was sent in","type":[[["Chat"]]],"meta":{"line":87,"file":"Message.js","path":"src/structures"}},{"name":"member","description":"Represents the author of message as chat member","type":[[["ChatMember"]]],"meta":{"line":93,"file":"Message.js","path":"src/structures"}},{"name":"entities","description":"Represents the special entities that were with the message","type":[[["MessageEntity"]]],"meta":{"line":99,"file":"Message.js","path":"src/structures"}},{"name":"originalMessage","description":"Original message if the message is reply","nullable":true,"type":[[["Message"]]],"meta":{"line":106,"file":"Message.js","path":"src/structures"}},{"name":"senderChat","description":"The chat where the message is forwarded from","nullable":true,"type":[[["Chat"]]],"meta":{"line":114,"file":"Message.js","path":"src/structures"}},{"name":"originalMessageId","description":"The id of the forwarded message","nullable":true,"type":[[["number"]]],"meta":{"line":122,"file":"Message.js","path":"src/structures"}},{"name":"originalMessageAuthor","description":"The author of original/forwarded message","nullable":true,"type":[[["User"]]],"meta":{"line":130,"file":"Message.js","path":"src/structures"}},{"name":"originalMessageSignature","description":"The author signature of the original/forwarded message","nullable":true,"type":[[["string"]]],"meta":{"line":138,"file":"Message.js","path":"src/structures"}},{"name":"originalMessageChat","description":"The chat which the message is forwarded from","nullable":true,"type":[[["Chat"]]],"meta":{"line":146,"file":"Message.js","path":"src/structures"}},{"name":"originalMessageSenderName","description":"The author name of the original/forwarded message","nullable":true,"type":[[["string"]]],"meta":{"line":154,"file":"Message.js","path":"src/structures"}},{"name":"originalMessageCreatedAt","description":"The created time of original/forwarded message","nullable":true,"type":[[["Date"]]],"meta":{"line":162,"file":"Message.js","path":"src/structures"}},{"name":"caption","description":"The caption of the message","nullable":true,"type":[[["string"]]],"meta":{"line":170,"file":"Message.js","path":"src/structures"}},{"name":"captionEntities","description":"The entities of the caption","nullable":true,"type":[[["MessageEntity"]]],"meta":{"line":178,"file":"Message.js","path":"src/structures"}},{"name":"location","description":"The location of the message","nullable":true,"type":[[["Location"]]],"meta":{"line":186,"file":"Message.js","path":"src/structures"}},{"name":"animation","description":"The animation in the message","nullable":true,"type":[[["Animation"]]],"meta":{"line":194,"file":"Message.js","path":"src/structures"}},{"name":"audio","description":"Audio message","nullable":true,"type":[[["Audio"]]],"meta":{"line":202,"file":"Message.js","path":"src/structures"}},{"name":"document","description":"The document of the message","nullable":true,"type":[[["Document"]]],"meta":{"line":210,"file":"Message.js","path":"src/structures"}},{"name":"photo","description":"The photo of the message","nullable":true,"type":[[["Photo"]]],"meta":{"line":218,"file":"Message.js","path":"src/structures"}},{"name":"video","description":"The video of the message","nullable":true,"type":[[["Video"]]],"meta":{"line":226,"file":"Message.js","path":"src/structures"}},{"name":"videoNote","description":"The video note","nullable":true,"type":[[["VideoNote"]]],"meta":{"line":234,"file":"Message.js","path":"src/structures"}},{"name":"voice","description":"The voice message","nullable":true,"type":[[["Voice"]]],"meta":{"line":242,"file":"Message.js","path":"src/structures"}},{"name":"sticker","description":"Sticker of the message","nullable":true,"type":[[["Sticker"]]],"meta":{"line":250,"file":"Message.js","path":"src/structures"}},{"name":"contact","description":"The contact message","nullable":true,"type":[[["Contact"]]],"meta":{"line":258,"file":"Message.js","path":"src/structures"}},{"name":"poll","description":"The poll of the message","nullable":true,"type":[[["Poll"]]],"meta":{"line":266,"file":"Message.js","path":"src/structures"}},{"name":"dice","description":"Dice in a message","nullable":true,"type":[[["Dice"]]],"meta":{"line":274,"file":"Message.js","path":"src/structures"}},{"name":"edited","description":"The timestamp at which the message was edited","readonly":true,"type":[[["Date"]]],"meta":{"line":283,"file":"Message.js","path":"src/structures"}},{"name":"isReply","description":"Checks, whether the message is a reply to another message","readonly":true,"type":[[["boolean"]]],"meta":{"line":292,"file":"Message.js","path":"src/structures"}},{"name":"isForwarded","description":"Checks, whether the message is forwarded","readonly":true,"type":[[["boolean"]]],"meta":{"line":301,"file":"Message.js","path":"src/structures"}}],"methods":[{"name":"reply","description":"Reply to the current message","params":[{"name":"content","description":"The text content to replay with","optional":true,"type":[[["string"]]]},{"name":"options","description":"Options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Message"]]],"meta":{"line":320,"file":"Message.js","path":"src/structures"}},{"name":"edit","description":"Edit message","params":[{"name":"content","description":"The text content to edit","type":[[["string"]]]},{"name":"options","description":"Options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":335,"file":"Message.js","path":"src/structures"}},{"name":"forward","description":"Forward the message to another chat","params":[{"name":"chatId","description":"The id of chat","type":[[["number"]]]},{"name":"silent","description":"Whether to disable notification or not","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["Message"]]],"meta":{"line":357,"file":"Message.js","path":"src/structures"}},{"name":"copy","description":"Copy the message to another chat","params":[{"name":"chatId","description":"The id of chat","type":[[["number"]]]},{"name":"options","description":"Options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Message"]]],"meta":{"line":376,"file":"Message.js","path":"src/structures"}},{"name":"pin","description":"Pin the message in the chat","params":[{"name":"silent","description":"Whether to disable notification","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":392,"file":"Message.js","path":"src/structures"}},{"name":"unpin","description":"Unpin the message in the chat if pinned","returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":406,"file":"Message.js","path":"src/structures"}},{"name":"delete","description":"Delete the message, requires `can_delete_messages` permission","returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":419,"file":"Message.js","path":"src/structures"}},{"name":"editLiveLocation","description":"Edit live location of the message","params":[{"name":"latitude","description":"The\nlatitude of the message","type":[[["number"]]]},{"name":"longitude","description":"The\nlongitude of the location","type":[[["number"]]]},{"name":"options","description":"Options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<("],["Message","|"],["boolean",")>"]]],"meta":{"line":437,"file":"Message.js","path":"src/structures"}},{"name":"stopLiveLocation","description":"Stops live sharing of location","params":[{"name":"options","description":"Options","optional":true,"type":[[["MessageOptions"]]]}],"returns":[[["Promise","<("],["Message","|"],["boolean",")>"]]],"meta":{"line":456,"file":"Message.js","path":"src/structures"}}],"meta":{"line":25,"file":"Message.js","path":"src/structures"}},{"name":"MessageCollector","description":"Collects messages on a chat.","extends":[[["Collector"]]],"construct":{"name":"MessageCollector","params":[{"name":"chat","description":"The chat","type":[[["Chat"]]]},{"name":"filter","description":"The filter to be applied to this collector","type":[[["CollectorFilter"]]]},{"name":"options","description":"The options to be applied to this collector","type":[[["MessageCollectorOptions"]]]}]},"props":[{"name":"chat","description":"The channel","type":[[["TextBasedChannel"]]],"meta":{"line":29,"file":"MessageCollector.js","path":"src/structures"}},{"name":"received","description":"Total number of messages that were received in the channel during message collection","type":[[["number"]]],"meta":{"line":35,"file":"MessageCollector.js","path":"src/structures"}},{"name":"client","description":"The client that instantiated this Collector","readonly":true,"type":[[["Client"]]],"meta":{"line":31,"file":"Collector.js","path":"src/util"}},{"name":"filter","description":"The filter applied to this collector","type":[[["CollectorFilter"]]],"meta":{"line":43,"file":"Collector.js","path":"src/util"}},{"name":"options","description":"The options of this collector","type":[[["CollectorOptions"]]],"meta":{"line":49,"file":"Collector.js","path":"src/util"}},{"name":"collected","description":"The items collected by this collector","type":[[["Collection"]]],"meta":{"line":55,"file":"Collector.js","path":"src/util"}},{"name":"ended","description":"Whether this collector has finished collecting","type":[[["boolean"]]],"meta":{"line":61,"file":"Collector.js","path":"src/util"}},{"name":"_timeout","description":"Timeout for cleanup","access":"private","nullable":true,"type":[[["Timeout"]]],"meta":{"line":68,"file":"Collector.js","path":"src/util"}},{"name":"_idletimeout","description":"Timeout for cleanup due to inactivity","access":"private","nullable":true,"type":[[["Timeout"]]],"meta":{"line":75,"file":"Collector.js","path":"src/util"}},{"name":"next","description":"Returns a promise that resolves with the next collected element;\nrejects with collected elements if the collector finishes without receiving a next element","readonly":true,"type":[[["Promise"]]],"meta":{"line":137,"file":"Collector.js","path":"src/util"}}],"methods":[{"name":"collect","description":"Handles a message for possible collection.","access":"private","params":[{"name":"message","description":"The message that could be collected","type":[[["Message"]]]}],"returns":{"types":[[["number"]]],"nullable":true},"meta":{"line":52,"file":"MessageCollector.js","path":"src/structures"}},{"name":"dispose","description":"Handles a message for possible disposal.","params":[{"name":"message","description":"The message that could be disposed of","type":[[["Message"]]]}],"returns":{"types":[[["string"]]],"nullable":true},"meta":{"line":68,"file":"MessageCollector.js","path":"src/structures"}},{"name":"endReason","description":"Checks after un/collection to see if the collector is done.","access":"private","returns":{"types":[[["string"]]],"nullable":true},"meta":{"line":82,"file":"MessageCollector.js","path":"src/structures"}},{"name":"handleCollect","description":"Call this to handle an event as a collectable element. Accepts any event data as parameters.","inherits":"Collector#handleCollect","inherited":true,"emits":["Collector#event:collect"],"params":[{"name":"args","description":"The arguments emitted by the listener","variable":true,"type":[["*"]]}],"async":true,"meta":{"line":89,"file":"Collector.js","path":"src/util"}},{"name":"handleDispose","description":"Call this to remove an element from the collection. Accepts any event data as parameters.","inherits":"Collector#handleDispose","inherited":true,"emits":["Collector#event:dispose"],"params":[{"name":"args","description":"The arguments emitted by the listener","variable":true,"type":[["*"]]}],"meta":{"line":115,"file":"Collector.js","path":"src/util"}},{"name":"stop","description":"Stops this collector and emits the `end` event.","inherits":"Collector#stop","inherited":true,"emits":["Collector#event:end"],"params":[{"name":"reason","description":"The reason this collector is ending","optional":true,"default":"'user'","type":[[["string"]]]}],"meta":{"line":169,"file":"Collector.js","path":"src/util"}},{"name":"resetTimer","description":"Resets the collectors timeout and idle timer.","inherits":"Collector#resetTimer","inherited":true,"params":[{"name":"options","description":"Options","optional":true,"type":[[["Object"]]]},{"name":"options.time","description":"How long to run the collector for in milliseconds","optional":true,"type":[[["number"]]]},{"name":"options.idle","description":"How long to stop the collector after inactivity in milliseconds","optional":true,"type":[[["number"]]]}],"meta":{"line":197,"file":"Collector.js","path":"src/util"}},{"name":"checkEnd","description":"Checks whether the collector should end, and if so, ends it.","inherits":"Collector#checkEnd","inherited":true,"meta":{"line":211,"file":"Collector.js","path":"src/util"}}],"events":[{"name":"collect","description":"Emitted whenever a message is collected.","params":[{"name":"message","description":"The message that was collected","type":[[["Message"]]]}],"meta":{"line":53,"file":"MessageCollector.js","path":"src/structures"}},{"name":"dispose","description":"Emitted whenever a message is disposed of.","params":[{"name":"message","description":"The message that was disposed of","type":[[["Message"]]]}],"meta":{"line":69,"file":"MessageCollector.js","path":"src/structures"}},{"name":"end","description":"Emitted when the collector is finished collecting.","params":[{"name":"collected","description":"The elements collected by the collector","type":[[["Collection"]]]},{"name":"reason","description":"The reason the collector ended","type":[[["string"]]]}],"meta":{"line":182,"file":"Collector.js","path":"src/util"}}],"meta":{"line":15,"file":"MessageCollector.js","path":"src/structures"}},{"name":"MessageEntity","description":"Entities parsed from {@link Message}","props":[{"name":"users","description":"Any users that were mentioned","type":[[["Collection","<"],["number",", "],["User",">"]]],"meta":{"line":15,"file":"MessageEntity.js","path":"src/structures"}},{"name":"mentions","description":"Any mentions that were mentioned using their username","type":[[["Collection","<"],["string",", "],["Entity",">"]]],"meta":{"line":21,"file":"MessageEntity.js","path":"src/structures"}},{"name":"hashtags","description":"Any hashtags(#) that were mentioned","type":[[["Collection","<"],["string",", "],["Entity",">"]]],"meta":{"line":27,"file":"MessageEntity.js","path":"src/structures"}},{"name":"cashtags","description":"Any cashtags($) that were mentioned","type":[[["Collection","<"],["string",", "],["Entity",">"]]],"meta":{"line":33,"file":"MessageEntity.js","path":"src/structures"}},{"name":"commands","description":"Any commands(/command) that were mentioned","type":[[["Collection","<"],["string",", "],["Entity",">"]]],"meta":{"line":39,"file":"MessageEntity.js","path":"src/structures"}},{"name":"urls","description":"Any urls that were mentioned","type":[[["Collection","<"],["string",", "],["Entity",">"]]],"meta":{"line":45,"file":"MessageEntity.js","path":"src/structures"}},{"name":"emails","description":"Any emails that were mentioned","type":[[["Collection","<"],["string",", "],["Entity",">"]]],"meta":{"line":51,"file":"MessageEntity.js","path":"src/structures"}},{"name":"phoneNumbers","description":"Any phonenumbers that were mentioned","type":[[["Collection","<"],["string",", "],["Entity",">"]]],"meta":{"line":57,"file":"MessageEntity.js","path":"src/structures"}},{"name":"links","description":"Any hyperlinks that were mentioned","type":[[["Collection","<"],["string",", "],["Entity",">"]]],"meta":{"line":63,"file":"MessageEntity.js","path":"src/structures"}}],"methods":[{"name":"getRaw","description":"Get raw data of entities","returns":[[["Array"]]],"meta":{"line":67,"file":"MessageEntity.js","path":"src/structures"}}],"meta":{"line":9,"file":"MessageEntity.js","path":"src/structures"}},{"name":"User","description":"Represents a user on Telegram.","extends":[[["Base"]]],"construct":{"name":"User","params":[{"name":"client","description":"The instantiating client","type":[[["Client"]]]},{"name":"data","description":"The data for the user","type":[[["Object"]]]}]},"props":[{"name":"id","description":"The id of the user","type":[[["number"]]],"meta":{"line":22,"file":"User.js","path":"src/structures"}},{"name":"firstName","description":"First name of the user","type":[[["string"]]],"meta":{"line":31,"file":"User.js","path":"src/structures"}},{"name":"bot","description":"Whether the user is bot or not","type":[[["boolean"]]],"meta":{"line":37,"file":"User.js","path":"src/structures"}},{"name":"lastName","description":"Last name of the user","nullable":true,"type":[[["string"]]],"meta":{"line":43,"file":"User.js","path":"src/structures"}},{"name":"username","description":"Username of the user","nullable":true,"type":[[["string"]]],"meta":{"line":49,"file":"User.js","path":"src/structures"}},{"name":"language","description":"The language of the user","nullable":true,"type":[[["string"]]],"meta":{"line":55,"file":"User.js","path":"src/structures"}}],"methods":[{"name":"getPhotos","description":"Get user photos","params":[{"name":"offset","description":"Offset","optional":true,"default":0,"type":[[["number"]]]},{"name":"limit","description":"No. of photos to return.","optional":true,"default":100,"type":[[["number"]]]}],"returns":[[["Promise","<"],["Photo",">"]]],"meta":{"line":64,"file":"User.js","path":"src/structures"}}],"meta":{"line":9,"file":"User.js","path":"src/structures"}},{"name":"Collection","description":"A Collection which holds a max amount\nof entries. The first key is deleted if\nthe Collection has\nreached max size.","extends":[[["Collection"]]],"access":"private","construct":{"name":"Collection","params":[{"name":"maxSize","description":"The maximum\nsize of the Collection","optional":true,"default":0,"type":[[["number"]]]},{"name":"iterable","description":"Optional entries passed to the Map\nconstructor.","optional":true,"default":null,"type":[[["Iterable"]]]}]},"props":[{"name":"maxSize","description":"The max size of the Collection.","type":[[["number"]]],"meta":{"line":25,"file":"Collection.js","path":"src/util"}}],"meta":{"line":18,"file":"Collection.js","path":"src/util"}},{"name":"Collector","description":"Abstract class for defining a new Collector.","abstract":true,"props":[{"name":"client","description":"The client that instantiated this Collector","readonly":true,"type":[[["Client"]]],"meta":{"line":31,"file":"Collector.js","path":"src/util"}},{"name":"filter","description":"The filter applied to this collector","type":[[["CollectorFilter"]]],"meta":{"line":43,"file":"Collector.js","path":"src/util"}},{"name":"options","description":"The options of this collector","type":[[["CollectorOptions"]]],"meta":{"line":49,"file":"Collector.js","path":"src/util"}},{"name":"collected","description":"The items collected by this collector","type":[[["Collection"]]],"meta":{"line":55,"file":"Collector.js","path":"src/util"}},{"name":"ended","description":"Whether this collector has finished collecting","type":[[["boolean"]]],"meta":{"line":61,"file":"Collector.js","path":"src/util"}},{"name":"_timeout","description":"Timeout for cleanup","access":"private","nullable":true,"type":[[["Timeout"]]],"meta":{"line":68,"file":"Collector.js","path":"src/util"}},{"name":"_idletimeout","description":"Timeout for cleanup due to inactivity","access":"private","nullable":true,"type":[[["Timeout"]]],"meta":{"line":75,"file":"Collector.js","path":"src/util"}},{"name":"next","description":"Returns a promise that resolves with the next collected element;\nrejects with collected elements if the collector finishes without receiving a next element","readonly":true,"type":[[["Promise"]]],"meta":{"line":137,"file":"Collector.js","path":"src/util"}}],"methods":[{"name":"handleCollect","description":"Call this to handle an event as a collectable element. Accepts any event data as parameters.","emits":["Collector#event:collect"],"params":[{"name":"args","description":"The arguments emitted by the listener","variable":true,"type":[["*"]]}],"async":true,"meta":{"line":89,"file":"Collector.js","path":"src/util"}},{"name":"handleDispose","description":"Call this to remove an element from the collection. Accepts any event data as parameters.","emits":["Collector#event:dispose"],"params":[{"name":"args","description":"The arguments emitted by the listener","variable":true,"type":[["*"]]}],"meta":{"line":115,"file":"Collector.js","path":"src/util"}},{"name":"stop","description":"Stops this collector and emits the `end` event.","emits":["Collector#event:end"],"params":[{"name":"reason","description":"The reason this collector is ending","optional":true,"default":"'user'","type":[[["string"]]]}],"meta":{"line":169,"file":"Collector.js","path":"src/util"}},{"name":"resetTimer","description":"Resets the collectors timeout and idle timer.","params":[{"name":"options","description":"Options","optional":true,"type":[[["Object"]]]},{"name":"options.time","description":"How long to run the collector for in milliseconds","optional":true,"type":[[["number"]]]},{"name":"options.idle","description":"How long to stop the collector after inactivity in milliseconds","optional":true,"type":[[["number"]]]}],"meta":{"line":197,"file":"Collector.js","path":"src/util"}},{"name":"checkEnd","description":"Checks whether the collector should end, and if so, ends it.","meta":{"line":211,"file":"Collector.js","path":"src/util"}},{"name":"collect","description":"Handles incoming events from the `handleCollect` function. Returns null if the event should not\nbe collected, or returns an object describing the data that should be stored.","see":["Collector#handleCollect"],"abstract":true,"params":[{"name":"args","description":"Any args the event listener emits","variable":true,"type":[["*"]]}],"returns":{"types":[[["Object"]]],"description":"Data to insert into collection, if any","nullable":true},"meta":{"line":260,"file":"Collector.js","path":"src/util"}},{"name":"dispose","description":"Handles incoming events from the `handleDispose`. Returns null if the event should not\nbe disposed, or returns the key that should be removed.","see":["Collector#handleDispose"],"abstract":true,"params":[{"name":"args","description":"Any args the event listener emits","variable":true,"type":[["*"]]}],"returns":{"types":[["*"]],"description":"Key to remove from the collection, if any","nullable":true},"meta":{"line":270,"file":"Collector.js","path":"src/util"}},{"name":"endReason","description":"The reason this collector has ended or will end with.","abstract":true,"returns":{"types":[[["string"]]],"description":"Reason to end the collector, if any","nullable":true},"meta":{"line":277,"file":"Collector.js","path":"src/util"}}],"events":[{"name":"collect","description":"Emitted whenever an element is collected.","params":[{"name":"args","description":"The arguments emitted by the listener","variable":true,"type":[["*"]]}],"meta":{"line":95,"file":"Collector.js","path":"src/util"}},{"name":"dispose","description":"Emitted whenever an element is disposed of.","params":[{"name":"args","description":"The arguments emitted by the listener","variable":true,"type":[["*"]]}],"meta":{"line":122,"file":"Collector.js","path":"src/util"}},{"name":"end","description":"Emitted when the collector is finished collecting.","params":[{"name":"collected","description":"The elements collected by the collector","type":[[["Collection"]]]},{"name":"reason","description":"The reason the collector ended","type":[[["string"]]]}],"meta":{"line":182,"file":"Collector.js","path":"src/util"}}],"meta":{"line":27,"file":"Collector.js","path":"src/util"}},{"name":"Permissions","description":"Data structure that makes it easy to interact with a permission","props":[{"name":"FLAGS","description":"Numeric permission flags. All\navailable properties:\n* `can_post_messages` (allowed to post\nmessages in channels, channels only)\n* `can_send_messages` (allowed to send\ntext messages, contacts, locations and\nvenues)\n* `can_send_media_messages` (allowed\nto send audios, documents, photo,\nvideos, video notes and voice notes\nimplies can_send_messages)\n* `can_send_polls`\t(allowed to send\npolls, implies can_send_messages)\n*`can_send_other_messages`\t(allowed to\nsend animations, games, stickers and\nuse inline bots, implies\ncan_send_media_messages)\n* `can_add_web_page_previews` (allowed\nto add web page previews to their\nmessages, implies\ncan_send_media_messages)\n* `can_invite_users`\t(allowed to\ninvite new users to the chat)\n* `can_pin_messages`\t(user is allowed\nto pin messages. Ignored in public\nsupergroups)\n* `can_edit_messages` (allowed to edit\nmessages of other users and can pin\nmessages, channels only)\n* `can_delete_messages` (allowed to\ndelete messages of other users)\n* `can_restrict_members` (allowed to\nrestrict, ban or unban chat members)\n* `can_promote_members` (allowed to\nadd new administrators with a subset\nof their own privileges or demote\nadministrators that he has promoted,\ndirectly or indirectly (promoted by\nadministrators that were appointed by\nhim))\n* `can_change_info` (allowed to change\nthe chat title, photo and other\nsettings. Ignored in public\nsupergroups)","scope":"static","type":[[["Object"]]],"meta":{"line":173,"file":"Permissions.js","path":"src/util"}}],"methods":[{"name":"allow","description":"Allow permissions","params":[{"name":"perm","type":[[["PermissionResolvable"]]]}],"returns":[[["Permissions"]]],"meta":{"line":28,"file":"Permissions.js","path":"src/util"}},{"name":"deny","description":"Deny permissions","params":[{"name":"perm","type":[[["PermissionResolvable"]]]}],"returns":[[["Permissions"]]],"meta":{"line":45,"file":"Permissions.js","path":"src/util"}},{"name":"has","description":"Checks this has permissions or not","params":[{"name":"perm","type":[[["number"]],[["string"]]]}],"returns":[[["boolean"]]],"meta":{"line":62,"file":"Permissions.js","path":"src/util"}},{"name":"resolve","description":"Data that resolves to give\npermission flag","params":[{"name":"perm","description":"A permission\nnumber or a permission flag (see\n{@link Permissions.FLAGS})","type":[[["number"]],[["string"]]]}],"returns":{"types":[[["string"]]],"description":"Permission flag"},"meta":{"line":89,"file":"Permissions.js","path":"src/util"}},{"name":"toObject","description":"Converts the permission flags to object","returns":[[["Object"]]],"meta":{"line":99,"file":"Permissions.js","path":"src/util"}},{"name":"isValid","description":"Checks provided flag is a valid telegram permission.","scope":"static","params":[{"name":"perm","description":"A\npermission number or a permission\nflag (see {@link Permissions.FLAGS})","type":[[["string"]],[["number"]]]}],"returns":[[["boolean"]]],"meta":{"line":75,"file":"Permissions.js","path":"src/util"}}],"meta":{"line":6,"file":"Permissions.js","path":"src/util"}},{"name":"Util","description":"Contains various usefull utility functions","methods":[{"name":"mergeDefault","description":"Sets default properties on an object that aren't already specified.","scope":"static","access":"private","params":[{"name":"def","description":"Default properties","type":[[["Object"]]]},{"name":"given","description":"Object to assign defaults to","type":[[["Object"]]]}],"returns":[[["Object"]]],"meta":{"line":24,"file":"Util.js","path":"src/util"}},{"name":"resolveBuffer","description":"Resolves a BufferResolvable to a Buffer or a Stream.","scope":"static","params":[{"name":"resource","description":"The buffer or stream resolvable to resolve","type":[[["BufferResolvable"]],[["Stream"]]]}],"async":true,"returns":[[["Promise","<("],["Buffer","|"],["Stream",")>"]]],"meta":{"line":55,"file":"Util.js","path":"src/util"}}],"meta":{"line":12,"file":"Util.js","path":"src/util"}}],"interfaces":[],"typedefs":[{"name":"AwaitMessagesOptions","description":"An object containing the same properties as CollectorOptions, but a few more:","type":[[["MessageCollectorOptions"]]],"props":[{"name":"errors","description":"Stop/end reasons that cause the promise to reject","optional":true,"type":[[["Array","<"],["string",">"]]]}],"meta":{"line":679,"file":"Chat.js","path":"src/structures"}},{"name":"MessageCollectorOptions","type":[[["CollectorOptions"]]],"props":[{"name":"max","description":"The maximum amount of messages to collect","type":[[["number"]]]},{"name":"maxProcessed","description":"The maximum amount of messages to process","type":[[["number"]]]}],"meta":{"line":5,"file":"MessageCollector.js","path":"src/structures"}},{"name":"CollectorFilter","description":"Filter to be applied to the collector.","type":[[["function"]]],"params":[{"name":"args","description":"Any arguments received by the listener","variable":true,"type":[["*"]]},{"name":"collection","description":"The items collected by this collector","type":[[["Collection"]]]}],"returns":[[["boolean"]],[["Promise","<"],["boolean",">"]]],"meta":{"line":7,"file":"Collector.js","path":"src/util"}},{"name":"CollectorOptions","description":"Options to be applied to the collector.","type":[[["Object"]]],"props":[{"name":"time","description":"How long to run the collector for in milliseconds","optional":true,"type":[[["number"]]]},{"name":"idle","description":"How long to stop the collector after inactivity in milliseconds","optional":true,"type":[[["number"]]]},{"name":"dispose","description":"Whether to dispose data when it's deleted","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":15,"file":"Collector.js","path":"src/util"}},{"name":"ClientOptions","description":"Options for a client","type":[[["Object"]]],"props":[{"name":"apiURL","description":"Base url of the telegram\nAPI","optional":true,"default":"https://api.telegram.org","type":[[["string"]]]},{"name":"pollInterval","description":"Interval for the polling in ms","optional":true,"default":1000,"type":[[["number"]]]},{"name":"messageCacheMaxSize","description":"Maximum number of messages to\ncache per chat (-1 or Infinity for\nunlimited)","optional":true,"default":200,"type":[[["number"]]]},{"name":"chatCacheMaxSize","description":"Maximum number of chats to\ncache","optional":true,"default":"Infinity","type":[[["number"]]]},{"name":"memberCacheMaxSize","description":"Maximum number of members to\ncache per chat","optional":true,"default":200,"type":[[["number"]]]},{"name":"userCacheMaxSize","description":"Maximum number of users to cache","optional":true,"default":1000,"type":[[["number"]]]}],"meta":{"line":3,"file":"Constants.js","path":"src/util"}},{"name":"PermissionResolvable","description":"Data that can resolved to give a permission flag. This can be:\n* A string (See {@link Permissions.FLAGS})\n* A permission number\n* A Permissions instance\n* An array of PermissionResolvable","type":[[["string"]],[["number"]],[["Permissions"]],[["Array","<"],["PermissionResolvable",">"]]],"meta":{"line":13,"file":"Permissions.js","path":"src/util"}},{"name":"BufferResolvable","description":"Data that can be resolved to give a Buffer. This can be:\n* A Buffer\n* The path to a local file\n* A URL","type":[[["string"]],[["Buffer"]]],"meta":{"line":37,"file":"Util.js","path":"src/util"}},{"name":"MessageOptions","description":"Options for sending message","type":[[["Object"]]],"props":[{"name":"mode","description":"Parsing\nmode,This can be:\n* MarkdownV2\n* Markdown\n* HTML","optional":true,"type":[[["string"]]]},{"name":"silent","description":"Whether to disable notification\nwhile sending message","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"entities","description":"Array\nof special entities that appear in\nmessage text, which can be specified\ninstead of parse_mode ({@link http\n://core.telegram.org/bot\n/api#messageentity})","optional":true,"type":[[["Array"]]]},{"name":"[embedLink\n=true]","description":"Whether to enable links\npreview or not","type":[[["boolean"]]]},{"name":"reply","description":"If the\nmessage is a reply, ID of the\noriginal message","optional":true,"type":[[["number"]]]},{"name":"force","description":"Pass\ntrue,if the message should be sent\neven if the specified replied-to\nmessage is not found","optional":true,"type":[[["boolean"]]]},{"name":"markup","description":"Reply markups","optional":true,"type":[[["ReplyMarkup"]]]},{"name":"others","description":"Other\noptions for specific method","optional":true,"variable":true,"type":[["*"]]}],"meta":{"line":76,"file":"Util.js","path":"src/util"}},{"name":"MessageTypes","description":"Type of message. This can be:\n* text\n* photo\n* audio\n* video\n* vudeoNote\n* voice\n* animation\n* sticker\n* contact\n* document\n* dice\n* poll\n* location","type":[[["string"]]],"meta":{"line":139,"file":"Util.js","path":"src/util"}}],"externals":[{"name":"Stream","see":["{@link https://nodejs.org/api/stream.html}"],"meta":{"line":45,"file":"Util.js","path":"src/util"}}]}